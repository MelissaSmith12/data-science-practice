
Option Compare Database
Option Explicit
'------------------------------------------------------------
' This Module updates all of the Make Tables for generating
' Coverage Reports
'------------------------------------------------------------
Sub UpdateCoverage()
' set variables
Dim db As Database
Dim rsStateStatus As Recordset
Dim rsReportRequest As Recordset
Dim rsSpecialReports As Recordset

Dim StateAbbreviation As String
Dim StateName As String
Dim StateNumber As Integer
Dim FolderStateName As String
Dim ReportFileNameBeginning As String
Dim WritingPromptAlignmentStatus As Boolean
Dim MathPracticeStatus As Boolean
Dim ELA_LiteracyStatus As Boolean
Dim EdGateStatus As Boolean
Dim MultipartAlignmentStatus As Boolean
Dim Disclaimer As String

Dim SpecialName As String
Dim SpecialDirectoryName As String
Dim ReportName As String
Dim AlignmentReportStatus As Boolean
Dim EDgateRequestStatus As Boolean

Dim SpecialSubsetStatus As Boolean
Dim SubsetBySubject As Boolean
Dim SubsetByStandardGrades As Boolean
Dim SubsetByPermissions As Boolean
Dim SubsetByDOK As Boolean
Dim SubsetByBloom As Boolean
Dim SubsetByItemTypes As Boolean

Dim RequestAnyForState As Boolean
Dim CoverageSummaryStatus As Boolean
Dim CoverageReportStatus As Boolean
Dim SpanishSummaryStatus As Boolean
Dim SpanishCoverageReportStatus As Boolean
Dim DOKSummaryStatus As Boolean
Dim DOKCoverageReportStatus As Boolean
Dim BloomSummaryStatus As Boolean
Dim BloomCoverageReportStatus As Boolean
Dim ItemTypeSummaryStatus As Boolean
Dim ItemTypeCoverageReportStatus As Boolean
Dim GapSummaryStatus As Boolean
Dim GapCoverageReportStatus As Boolean
Dim PassageSummaryStatus As Boolean
Dim PassageCoverageReportStatus As Boolean
Dim TEI_ItemTypeSummaryStatus As Boolean
Dim TEI_ItemTypeCoverageReportStatus As Boolean

Dim rsSubsetItemTypes As Recordset
Dim MultipleChoiceStatus As Boolean
Dim ConstructedResponseStatus As Boolean
Dim ChoiceMultipleStatus As Boolean
Dim WritingPromptStatus As Boolean
Dim GapMatchStatus As Boolean
Dim GraphicGapMatchStatus As Boolean
Dim GridInStatus As Boolean
Dim HotSpotStatus As Boolean
Dim HotTextStatus As Boolean
Dim InlineChoiceStatus As Boolean
Dim OrderedStatus As Boolean
Dim MultipartStatus As Boolean
Dim TEIStatus As Boolean

Dim rsSubjects As Object
Dim Subjects(4) As String
Dim index As Integer

Dim ReportDate As String
'On Error GoTo ErrorExit
Set db = CurrentDb
Set rsReportRequest = db.OpenRecordset("tblCoverageReportStatesRequested", dbOpenSnapshot)
'---Test if Recordset has a record.

'-- need to test all the recordsets
If rsReportRequest.EOF Then
 MsgBox "There were no reports requested.", vbOKOnly, "Error"
 GoTo ExitSub
End If
rsReportRequest.MoveFirst

Set rsSpecialReports = db.OpenRecordset("tblSpecialReports", dbOpenSnapshot, dbForwardOnly)
SpecialSubsetStatus = rsSpecialReports!SubsetStatus
AlignmentReportStatus = rsSpecialReports!AlignmentReportStatus
EDgateRequestStatus = rsSpecialReports!EDgateRequestStatus

'Run the subsetting queries and set report names, if appropriate
If SpecialSubsetStatus = True Then
    DoCmd.OpenQuery "qryAllItemForSubset"
    SpecialName = rsSpecialReports!SpecialName
    SpecialDirectoryName = "C:\AccessReports\Current Delivery\" & SpecialName & "\"
    Call CheckDirectory(SpecialDirectoryName)
    SpecialName = SpecialName & " "
Else
    SpecialName = ""
End If

If AlignmentReportStatus = True Then
    Call CreateReportFolders
End If

rsSpecialReports.Close

'Find out what item types are included in the reports
Set rsSubsetItemTypes = db.OpenRecordset("tblSubsetItemTypes", dbOpenSnapshot, dbForwardOnly)
MultipleChoiceStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
ConstructedResponseStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
WritingPromptStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
ChoiceMultipleStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GapMatchStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GraphicGapMatchStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GridInStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
HotSpotStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
HotTextStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
InlineChoiceStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
OrderedStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
MultipartStatus = rsSubsetItemTypes!Include
rsSubsetItemTypes.Close

If (ChoiceMultipleStatus = True Or GapMatchStatus = True Or GraphicGapMatchStatus = True Or GridInStatus = True Or HotSpotStatus = True Or HotTextStatus = True Or InlineChoiceStatus = True Or OrderedStatus = True) Then
    TEIStatus = True
    Else: TEIStatus = False
End If

'Begin looping through states to identify which states were requested and produce their reports
While Not rsReportRequest.EOF
DoCmd.SetWarnings False
' Grab Recordset Values first from the report table.
    StateAbbreviation = rsReportRequest!StateAbbreviation
    StateNumber = rsReportRequest!StateNumber
    RequestAnyForState = rsReportRequest!RequestAnyForState
    ReportFileNameBeginning = rsReportRequest!ReportFileNameBeginning
    If SpecialSubsetStatus = True Then
        FolderStateName = SpecialDirectoryName & rsReportRequest!FolderStateName & "\"
    Else
        FolderStateName = "C:\AccessReports\Current Delivery\" & rsReportRequest!FolderStateName & "\"
    End If
    Call CheckDirectory(FolderStateName)
'If no reports are requested for a given state, then move to the next state in the list
    While RequestAnyForState = False
        rsReportRequest.MoveNext
        StateAbbreviation = rsReportRequest!StateAbbreviation
        StateNumber = rsReportRequest!StateNumber
        RequestAnyForState = rsReportRequest!RequestAnyForState
        ReportFileNameBeginning = rsReportRequest!ReportFileNameBeginning
        If SpecialSubsetStatus = True Then
            FolderStateName = SpecialDirectoryName & rsReportRequest!FolderStateName & "\"
        Else
            FolderStateName = "C:\AccessReports\Current Delivery\" & rsReportRequest!FolderStateName & "\"
        End If
        Call CheckDirectory(FolderStateName)
    Wend
'Then pull report and folder names and individual reports
    CoverageSummaryStatus = rsReportRequest!CoverageSummary
    CoverageReportStatus = rsReportRequest!CoverageReport
    SpanishSummaryStatus = rsReportRequest!SpanishSummary
    SpanishCoverageReportStatus = rsReportRequest!SpanishCoverageReport
    DOKSummaryStatus = rsReportRequest!DOKSummary
    DOKCoverageReportStatus = rsReportRequest!DOKReport
    BloomSummaryStatus = rsReportRequest!BloomSummary
    BloomCoverageReportStatus = rsReportRequest!BloomReport
    ItemTypeSummaryStatus = rsReportRequest!ItemTypeSummary
    ItemTypeCoverageReportStatus = rsReportRequest!ItemTypeReport
    GapSummaryStatus = rsReportRequest!GapSummary
    GapCoverageReportStatus = rsReportRequest!GapReport
    PassageSummaryStatus = rsReportRequest!PassageSummary
    PassageCoverageReportStatus = rsReportRequest!PassageReport
    TEI_ItemTypeSummaryStatus = rsReportRequest!TEI_ItemTypeSummary
    'TEI_ItemTypeCoverageReportStatus = rsReportRequest!TEI_ItemTypeReport
    
'navigate to given state in tblReportDecisions to grab status for Writing Prompts, Math Practice, Literacy alignments, Edgate, and Multipart Alignments
    Set rsStateStatus = db.OpenRecordset("tblReportDecisions", dbOpenSnapshot)
    While rsStateStatus.EOF = False
        'check for match
        If rsStateStatus.Fields.Item(0).Value = StateNumber Then
            'get value
            StateName = rsStateStatus!StateName
            WritingPromptAlignmentStatus = rsStateStatus!WritingPromptStatus
            MathPracticeStatus = rsStateStatus!MathPracticeStatus
            ELA_LiteracyStatus = rsStateStatus!LiteracyStatus
            EdGateStatus = rsStateStatus!EdGateCustomer
            MultipartAlignmentStatus = rsStateStatus!Multipart
            'exit loop
            rsStateStatus.MoveLast
        End If
        rsStateStatus.MoveNext
    Wend
    rsStateStatus.Close
        
'If WPStatus is No, then make WPAlignmentStatus No. Otherwise, let state dictate WPAlignmentStatus
If WritingPromptStatus = False Then
    WritingPromptAlignmentStatus = False
End If

'If MultipartStatus is False (if multipart items are to be excluded as an item type), then make MultipartAlignmentStatus = False. Otherwise, let state dictate status
If MultipartStatus = False Then
    MultipartAlignmentStatus = False
End If

ReportDate = Format(Now(), "mm.dd.yyyy")
    
'Update the StateNum field in the ReportingState Table to control what state's data is used for each Access Query
    DoCmd.RunSQL "Update tblReportingState SET StateNumber = " & StateNumber & "  WHERE ID = 1"
'Run queries to generate base coverage. These form the foundation of most other coverage reports, so these need to always run
    
'If reports are subsetted, then run that query. else run the one below
    If SpecialSubsetStatus = True Then
     DoCmd.OpenQuery "qryReportingStateCoreActiveAlignmentsSubset"
    Else: DoCmd.OpenQuery "qryReportingStateCoreActiveAlignments"
    End If
    
DoCmd.OpenQuery "qryReportingStateGradeSequence"
DoCmd.OpenQuery "qryReportingStateCoreCoverageByStandard"

'Run queries to build summaries
DoCmd.OpenQuery "qryClearReportingStateTotalAlignmentsWithDuplicates"
DoCmd.OpenQuery "qryAddReportingStateCoreActiveAlignments"
DoCmd.OpenQuery "qryReportingStatesSubjectsForSummary"

'Find out what subjects are applicable in the state. Set subjects for any summary reports run and so specific alignment types
'only run if necessary. This is needed even if only certain subjects are requested because subjects may vary by state

Set rsSubjects = CreateObject("ADODB.Recordset")
rsSubjects.Open "tblReportingStateSubjectsForSummary", CurrentProject.Connection
index = 0
While Not rsSubjects.EOF
    Subjects(index) = rsSubjects![Report Subjects]
    rsSubjects.MoveNext
    index = index + 1
Wend
rsSubjects.Close

Call SetDisclaimer(StateName, Subjects, WritingPromptAlignmentStatus, MathPracticeStatus, ELA_LiteracyStatus)
   
Call WritingPromptQueries(WritingPromptAlignmentStatus)
Call MathPracticeQueries(MathPracticeStatus)
Call ELA_LiteracyQueries(ELA_LiteracyStatus, WritingPromptAlignmentStatus, SpecialSubsetStatus)

'Now that Writing Prompt, ELA_Literacy, and Multipart queries have run (if applicable) and any relevant items have been added to the total item list, finish the Summary queries
DoCmd.OpenQuery "qryReportingStateTotalUniqueItemsForSummary"
DoCmd.OpenQuery "qryReportingStateUniqueItemsAndAlignments"
DoCmd.OpenQuery "qryReportingStateCoverageSummary"
DoCmd.OpenQuery "qryReportingStateAlignmentTotalsForSummary"

'Run individual reports, if requested
If CoverageReportStatus = True Then Call CoverageReports(ReportFileNameBeginning, FolderStateName, ReportDate, SpecialName, Subjects, WritingPromptAlignmentStatus, ELA_LiteracyStatus, MathPracticeStatus)
If CoverageSummaryStatus = True Then Call CoverageSummaryReports(ReportFileNameBeginning, FolderStateName, ReportDate, SpecialName, Subjects)
If (SpanishSummaryStatus = True Or SpanishCoverageReportStatus = True) Then Call SpanishReports(ReportFileNameBeginning, FolderStateName, ReportDate, SpanishSummaryStatus, SpanishCoverageReportStatus, MathPracticeStatus, ELA_LiteracyStatus, WritingPromptAlignmentStatus, SpecialName, Subjects)
If (ItemTypeSummaryStatus = True Or ItemTypeCoverageReportStatus = True) Then Call ItemTypeReports(ReportFileNameBeginning, FolderStateName, ReportDate, ItemTypeSummaryStatus, ItemTypeCoverageReportStatus, SpecialName, Subjects, MultipleChoiceStatus, ConstructedResponseStatus, TEIStatus, WritingPromptAlignmentStatus, MultipartAlignmentStatus)

If (TEI_ItemTypeSummaryStatus = True Or TEI_ItemTypeCoverageReportStatus = True) Then Call TEI_ItemTypeReports(ReportFileNameBeginning, FolderStateName, ReportDate, TEI_ItemTypeSummaryStatus, TEI_ItemTypeCoverageReportStatus, SpecialName)
If (BloomSummaryStatus = True Or BloomCoverageReportStatus = True) Then Call BloomReports(ReportFileNameBeginning, FolderStateName, ReportDate, BloomSummaryStatus, BloomCoverageReportStatus, SpecialName, Subjects, WritingPromptAlignmentStatus, ELA_LiteracyStatus, MathPracticeStatus)
If (DOKSummaryStatus = True Or DOKCoverageReportStatus = True) Then Call DOKReports(ReportFileNameBeginning, FolderStateName, ReportDate, DOKSummaryStatus, DOKCoverageReportStatus, SpecialName, Subjects, WritingPromptAlignmentStatus, ELA_LiteracyStatus, MathPracticeStatus)

'Run alignment report routine, if requested
If AlignmentReportStatus = True Or EDgateRequestStatus = True Then Call AlignmentReportsForDVDs(StateNumber, StateAbbreviation, WritingPromptAlignmentStatus, MathPracticeStatus, ELA_LiteracyStatus, MultipartAlignmentStatus, EdGateStatus, AlignmentReportStatus)
                                                                                                                                
'Run the cumulative queries
    DoCmd.OpenQuery "qryCumulativeCoverageByGrade"
    DoCmd.OpenQuery "qryCumulativeCoverageByGradeFromSummary"
    DoCmd.OpenQuery "qryCumulativeTotalFromSummary"

'Clear Out Subject array
    Erase Subjects

    DoCmd.SetWarnings True
  
  rsReportRequest.MoveNext

Wend

ExitSub:
 rsReportRequest.Close
 Set rsReportRequest = Nothing
 Set rsStateStatus = Nothing
 Set rsSubjects = Nothing
 Set db = Nothing
 Exit Sub
ErrorExit:
 MsgBox Err.Description
 Resume ExitSub
End Sub
Sub WritingPromptQueries(WritingPromptAlignmentStatus As Boolean)
    If WritingPromptAlignmentStatus = True Then
        DoCmd.OpenQuery "qryReportingStateWritingPromptActiveAlignments"
        DoCmd.OpenQuery "qryReportingStateWritingPromptReportedGradesForItemType"
        DoCmd.OpenQuery "qryReportingStateWritingPromptItemCountByReportedGradeAndType"
        DoCmd.OpenQuery "qryReportingStateWritingPromptItemTotalsByReportedGrade"
        DoCmd.OpenQuery "qryReportingStateWritingPromptTotal"
        DoCmd.OpenQuery "qryReportingStateWritingPromptCoverageByStandard"
        DoCmd.OpenQuery "qryReportingStateWritingPromptCoverageAggregate"
        'Add Writing prompts to summary table
        DoCmd.OpenQuery "qryAddReportingStateWritingPromptAlignments"
        DoCmd.OpenQuery "qryCumulativeWritingPromptCoverageByGrade"
        Else
        DoCmd.OpenQuery "qryClearReportingStateWritingPromptCoverageAggregate"
    End If
End Sub
Sub MathPracticeQueries(MathPracticeStatus As Boolean)
    If MathPracticeStatus = True Then
        DoCmd.OpenQuery "qryReportingStateMathPracticeActiveAlignments"
        DoCmd.OpenQuery "qryReportingStateMathPracticeReportedGradesForItems"
        DoCmd.OpenQuery "qryReportingStateMathPracticeItemCountByReportedGrade"
        DoCmd.OpenQuery "qryReportingStateMathPracticeTotal"
        DoCmd.OpenQuery "qryReportingStateMathPracticeCoverageByStandard"
        DoCmd.OpenQuery "qryReportingStateMathPracticeCoverageAggregate"
        Else
            DoCmd.OpenQuery "qryClearReportingStateMathPracticeCoverageAggregate"
    End If
End Sub
Sub ELA_LiteracyQueries(ELA_LiteracyStatus As Boolean, WritingPromptAlignmentStatus As Boolean, SpecialSubsetStatus As Boolean)
    If ELA_LiteracyStatus = True Then
            If SpecialSubsetStatus = True Then
                DoCmd.OpenQuery "qryReportingStateLiteracyActiveAlignmentsSubset"
            Else
                DoCmd.OpenQuery "qryReportingStateLiteracyActiveAlignments"
            End If
            DoCmd.OpenQuery "qryReportingStateLiteracyReadingAndWritingByStandard"
            DoCmd.OpenQuery "qryReportingStateLiteracyWritingPromptReportedGradesForItemType"
            DoCmd.OpenQuery "qryReportingStateLiteracyWrtgPromptItemCountByRptdGradeAndType"
            DoCmd.OpenQuery "qryReportingStateLiteracyWritingPromptItemTotalsbyReportedGrade"
            DoCmd.OpenQuery "qryReportingStateLiteracyWritingPromptTotal"
            DoCmd.OpenQuery "qryReportingStateLiteracyWritingPromptCoverageByStandard"
            DoCmd.OpenQuery "qryReportingStateLiteracyWritingPromptCoverageAggregate"
            DoCmd.OpenQuery "qryAddReportingStateLiteracyAlignments"
            DoCmd.OpenQuery "qryCumulativeLiteracyReadingAndWritingCoverageByGrade"
            DoCmd.OpenQuery "qryCumulativeLiteracyWritingPromptCoverageByGrade"
        Else
            DoCmd.OpenQuery "qryClearReportingStateLiteracyWritingPromptCoverageAggregate"
            DoCmd.OpenQuery "qryClearReportingStateLiteracyReadingAndWritingByStandard"
    End If
End Sub
Sub SpanishReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, SpanishSummaryStatus As Boolean, SpanishCoverageReportStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean, WritingPromptStatus As Boolean, SpecialName As String, Subjects As Variant)
Dim FileName As String
    
    DoCmd.OpenQuery "qryReportingStateSpanishActiveAlignments"
    DoCmd.OpenQuery "qryReportingStateSpanishCoverageByStandard"
    If MathPracticeStatus = True Then
        DoCmd.OpenQuery "qryReportingStateSpanishMathPracticeActiveItems"
        DoCmd.OpenQuery "qryReportingStateSpanishMathPracticeItemCountByReportedGrade"
        DoCmd.OpenQuery "qryReportingStateSpanishMathPracticeTotal"
        DoCmd.OpenQuery "qryReportingStateSpanishMathPracticeCoverageByStandard"
        DoCmd.OpenQuery "qryReportingStateSpanishMathPracticeCoverageAggregate"
        DoCmd.OpenQuery "qryCumulativeSpanishMathPracticeCoverageByStandard"
        Else
            DoCmd.OpenQuery "qryClearReportingStateSpanishMathPracticeCoverageAggregate"
    End If
    If ELA_LiteracyStatus = True Then
        DoCmd.OpenQuery "qryReportingStateSpanishLiteracyReadingAndWritingByStandard"
        DoCmd.OpenQuery "qryCumulativeSpanishLiteracyCoverageByGrade"
        If WritingPromptStatus = True Then
            ' RUN the Spanish Writing Prompt Queries
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptActiveAlignments"
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptItemCountByRptGradeAndType"
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptItemTotalsByReportedGrade"
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptTotal"
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptCoverageByStandard"
            DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptCoverageAggregate"
            DoCmd.OpenQuery "qryCumulativeSpanishWritingPromptCoverageByGrade"
            'Run the Spanish Literacy Writing Prompt Queries
            DoCmd.OpenQuery "qryReportingStateSpanishLitWrtgPromptItemCountByRptdGradeAndType"
            DoCmd.OpenQuery "qryReportingStateSpanishLitWritingPromptItemTotalsbyRptdGrade"
            DoCmd.OpenQuery "qryReportingStateSpanishLiteracyWritingPromptTotal"
            DoCmd.OpenQuery "qryReportingStateSpanishLiteracyWritingPromptCoverageByStandard"
            DoCmd.OpenQuery "qryReportingStateSpanishLiteracyWritingPromptCoverageAggregate"
            DoCmd.OpenQuery "qryCumulativeSpanishLiteracyWritingPromptCoverageByGrade"
        Else
            DoCmd.OpenQuery "qryClearReportingStateSpanishWritingPromptCoverageAggregate"
            DoCmd.OpenQuery "qryClearReportingStateSpanishLitWritingPromptCoverageAggregate"
        End If
        Else
            DoCmd.OpenQuery "qryClearReportingStateSpanishLiteracyReadingAndWritingByStandard"
            DoCmd.OpenQuery "qryClearReportingStateSpanishLitWritingPromptCoverageAggregate"
            If WritingPromptStatus = True Then
            'Only run the Writing Prompt Queries
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptActiveAlignments"
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptItemCountByRptGradeAndType"
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptItemTotalsByReportedGrade"
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptTotal"
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptCoverageByStandard"
                DoCmd.OpenQuery "qryReportingStateSpanishWritingPromptCoverageAggregate"
                DoCmd.OpenQuery "qryCumulativeSpanishWritingPromptCoverageByGrade"
            Else
                DoCmd.OpenQuery "qryClearReportingStateSpanishWritingPromptCoverageAggregate"
                DoCmd.OpenQuery "qryClearReportingStateSpanishLitWritingPromptCoverageAggregate"
            End If
    End If
    If SpanishCoverageReportStatus = True Then
        'Always includes special name because if it's blank it doesn't mess up the filenames
        'Add space to Special Name (now that directories are set) to format filenames
        FileName = FolderStateName & ReportFileNameBeginning & " Spanish Coverage Report " & SpecialName & ReportDate & ".PDF"
        Call SetSpanishCoverageReportDisclaimers(Subjects, WritingPromptStatus, MathPracticeStatus, ELA_LiteracyStatus)
        DoCmd.OutputTo acOutputReport, "rptReportingStateSpanishCoverage", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    If SpanishSummaryStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " Spanish Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        Call SetSpanishCoverageSummaryReport(Subjects)
        DoCmd.OpenQuery "qryReportingStateTotalUniqueItemsForSpanishSummary"
        DoCmd.OpenQuery "qryReportingStateSpanishCoverageSummary"
        DoCmd.OpenQuery "qryReportingStateAlignmentTotalsForSpanishSummary"
        DoCmd.OutputTo acOutputReport, "rptReportingStateSpanishCoverageSummary", acFormatPDF, FileName, False, acExportQualityPrint
        DoCmd.OpenQuery "qrySpanishCumulativeCoverageByGrade"
        DoCmd.OpenQuery "qrySpanishCumulativeCoverageByGradeFromSummary"
        DoCmd.OpenQuery "qrySpanishCumulativeTotalFromSummary"
   
    End If
        FileName = ""
End Sub
Sub DOKReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, DOKSummaryStatus As Boolean, DOKCoverageReportStatus As Boolean, SpecialName As String, Subjects As Variant, WritingPromptAlignmentStatus As Boolean, ELA_LiteracyStatus As Boolean, MathPracticeStatus As Boolean)
    Dim FileName As String
'Run Queries necessary for all reports
    DoCmd.OpenQuery "qryReportingStateDOKByGrade"
    DoCmd.OpenQuery "qryReportingStateDOKSummary"
    DoCmd.OpenQuery "qryCumulativeDOKByGrade"
    DoCmd.OpenQuery "qryCumulativeDOKSummary"
    If DOKCoverageReportStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " DOK Coverage Report " & SpecialName & ReportDate & ".PDF"
        Call SetDOKCoverageReportDisclaimers(Subjects, WritingPromptAlignmentStatus, MathPracticeStatus, ELA_LiteracyStatus)
        DoCmd.OutputTo acOutputReport, "rptReportingStateDOKCoverage", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    If DOKSummaryStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " DOK Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        Call SetDOKSummaryReport(Subjects)
        DoCmd.OutputTo acOutputReport, "rptReportingStateDOKSummary", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    FileName = ""
End Sub
Sub BloomReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, BloomSummaryStatus As Boolean, BloomCoverageReportStatus As Boolean, SpecialName As String, Subjects As Variant, WritingPromptAlignmentStatus As Boolean, ELA_LiteracyStatus As Boolean, MathPracticeStatus As Boolean)
    Dim FileName As String
'Run Queries necessary for all reports
    DoCmd.OpenQuery "qryReportingStateBloomByGrade"
    DoCmd.OpenQuery "qryReportingStateBloomSummary"
    DoCmd.OpenQuery "qryCumulativeBloomLevelByGrade"
    DoCmd.OpenQuery "qryCumulativeBloomSummary"
    If BloomCoverageReportStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " Bloom Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        Call SetBloomCoverageReportDisclaimers(Subjects, WritingPromptAlignmentStatus, MathPracticeStatus, ELA_LiteracyStatus)
        DoCmd.OutputTo acOutputReport, "rptReportingStateBloomCoverage", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    If BloomSummaryStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " Bloom Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        Call SetBloomSummaryReport(Subjects)
        DoCmd.OutputTo acOutputReport, "rptReportingStateBloomSummary", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    FileName = ""
End Sub
Sub ItemTypeReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, ItemTypeSummaryStatus As Boolean, ItemTypeCoverageReportStatus As Boolean, SpecialName As String, Subjects As Variant, MultipleChoiceStatus As Boolean, ConstructedResponseStatus As Boolean, TEIStatus As Boolean, WritingPromptAlignmentStatus As Boolean, MultipartStatus As Boolean)
    Dim FileName As String
'Run Queries necessary for reports
    DoCmd.OpenQuery "qryReportingStateAlignmentByItemTypeByStandard"
    DoCmd.OpenQuery "qryReportingStateUniqueItemsByItemTypeAndGrade"
    If ItemTypeSummaryStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " Item Type Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        Call SetItemTypeSummaryReport(Subjects, MultipleChoiceStatus, ConstructedResponseStatus, WritingPromptAlignmentStatus, TEIStatus, MultipartStatus)
        DoCmd.OutputTo acOutputReport, "rptReportingStateRegularSummaryByItemType", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    DoCmd.OpenQuery "qryCumulativeItemTypeCoverageFromSummary"
    DoCmd.OpenQuery "qryCumulativeItemTypeCoverageByGrade"
    FileName = ""
End Sub
Sub TEI_ItemTypeReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, TEI_ItemTypeSummaryStatus As Boolean, TEI_ItemTypeCoverageReportStatus As Boolean, SpecialName As String)
    Dim FileName As String
'Run Queries necessary for reports
    DoCmd.OpenQuery "qryReportingStateAlignmentByItemTypeByStandard"
    If TEI_ItemTypeSummaryStatus = True Then
        FileName = FolderStateName & ReportFileNameBeginning & " TEI Item Type Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
        DoCmd.OutputTo acOutputReport, "rptReportingStateSummaryByTEI", acFormatPDF, FileName, False, acExportQualityPrint
    End If
    FileName = ""
End Sub
Sub CoverageReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, SpecialName As String, Subjects As Variant, WritingPromptAlignmentStatus As Boolean, ELA_LiteracyStatus As Boolean, MathPracticeStatus As Boolean)
Dim FileName As String
    FileName = FolderStateName & ReportFileNameBeginning & " Coverage Report " & SpecialName & ReportDate & ".PDF"
    Call SetCoverageReportDisclaimers(Subjects, WritingPromptAlignmentStatus, MathPracticeStatus, ELA_LiteracyStatus)
    DoCmd.OutputTo acOutputReport, "rptReportingStateCoverageReport", acFormatPDF, FileName, False, acExportQualityPrint
    FileName = ""
End Sub
Sub CoverageSummaryReports(ReportFileNameBeginning As String, FolderStateName As String, ReportDate As String, SpecialName As String, Subjects As Variant)
Dim FileName As String
    FileName = FolderStateName & ReportFileNameBeginning & " Coverage Report Summary " & SpecialName & ReportDate & ".PDF"
    Call SetCoverageSummaryReport(Subjects)
    DoCmd.OutputTo acOutputReport, "rptReportingStateCoverageSummary", acFormatPDF, FileName, False, acExportQualityPrint
    FileName = ""
End Sub
Sub CheckDirectory(strDirectoryPath As String)
If Len(Dir(strDirectoryPath, vbDirectory)) = 0 Then
    MkDir strDirectoryPath
End If
End Sub
Sub SetDisclaimer(StateName As String, Subjects As Variant, WritingPromptAlignmentStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim rsDate As Recordset
Dim rsSubsetItemTypes As Recordset
Dim DeliveryDate As String
Dim Disclaimer As String
Dim Disclaimer2 As String
Dim ChoiceMultiple As Boolean
Dim WritingPrompt As Boolean
Dim GapMatch As Boolean
Dim GraphicGapMatch As Boolean
Dim GridIn As Boolean
Dim HotSpot As Boolean
Dim HotText As Boolean
Dim InlineChoice As Boolean
Dim Ordered As Boolean
Dim TEIStatus As Boolean

Set db = CurrentDb
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot, dbForwardOnly)
Set rsDate = db.OpenRecordset("tblDeliveryDate", dbOpenSnapshot, dbForwardOnly)
Set rsSubsetItemTypes = db.OpenRecordset("tblSubsetItemTypes", dbOpenSnapshot, dbForwardOnly)

'get the Delivery Date
DeliveryDate = rsDate!DeliveryDate
rsDate.Close

'Find out what item types are included in the reports
rsSubsetItemTypes.MoveNext
rsSubsetItemTypes.MoveNext
WritingPrompt = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
ChoiceMultiple = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GapMatch = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GraphicGapMatch = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
GridIn = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
HotSpot = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
HotText = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
InlineChoice = rsSubsetItemTypes!Include
rsSubsetItemTypes.MoveNext
Ordered = rsSubsetItemTypes!Include
rsSubsetItemTypes.Close

If (ChoiceMultiple = True Or GapMatch = True Or GraphicGapMatch = True Or GridIn = True Or HotSpot = True Or HotText = True Or InlineChoice = True Or Ordered = True) Then
    TEIStatus = True
    Else: TEIStatus = False
End If

If (((Subjects(0) = "English Language Arts" And (WritingPromptAlignmentStatus = True Or ELA_LiteracyStatus = True)) Or (Subjects(1) = "Mathematics" And MathPracticeStatus = True)) And TEIStatus = True) Then
    Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed. The totals reflected in this summary report represent unique aligned items within the " & StateName & " standards. Items that are aligned to more than one standard, such as writing prompts that assess multiple writing standards, are counted only once under their primary subject. In addition, Technology-Enhanced Items (TEIs) are new item types, and the availability and appearance of the TEIs is subject to the functionality available in the data management platform." & Chr(34)
    ElseIf ((Subjects(0) = "English Language Arts" Or Subjects(1) = "Mathematics") And TEIStatus = True) Then
        Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed. In addition, Technology-Enhanced Items (TEIs) are new item types, and the availability and appearance of the TEIs is subject to the functionality available in the data management platform." & Chr(34)
    Else
        Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed." & Chr(34)
End If
'Store Disclaimer in table under Summary
    DoCmd.RunSQL "Update tblDisclaimer SET tblDisclaimer.Disclaimer = '" & Disclaimer & "'  WHERE ReportType = 'Summary'"
    
'Set Spanish Summary Disclaimer
If ((Subjects(0) = "English Language Arts" And ELA_LiteracyStatus = True) Or (Subjects(1) = "Mathematics" And MathPracticeStatus = True)) Then
        Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed. The totals reflected in this summary report represent unique aligned items within the " & StateName & " standards. Items that are aligned to more than one standard, such as ELA Literacy or Mathematical Practice, are counted only once under their primary subject." & Chr(34)
    Else: Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed." & Chr(34)
End If
DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "'  WHERE ReportType = 'SpanishSummary'"

'Set Individual subject disclaimers. Science and Social Studies unchanged correctly because no TEI in those subjects
Disclaimer = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed." & Chr(34)

If TEIStatus = True Then
    Disclaimer2 = "=" & Chr(34) & "All counts are as of " & DeliveryDate & ". Due to the dynamic nature of the bank and ongoing work, totals may shift as additional work is completed. In addition, Technology-Enhanced Items (TEIs) are new item types, and the availability and appearance of the TEIs is subject to the functionality available in the data management platform." & Chr(34)
    DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer2 & "' WHERE ReportType = 'ELA'"
    DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer2 & "' WHERE ReportType = 'Math'"
Else:
    DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'ELA'"
    DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'Math'"
End If

DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'NO_TEI'"
DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'Science'"
DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'Social Studies'"
DoCmd.RunSQL "Update tblDisclaimer SET Disclaimer = '" & Disclaimer & "' WHERE ReportType = 'ELA_WritingPrompt'"
rsDisclaimer.Close
End Sub

Sub SetCoverageSummaryReport(Subjects As Variant)
Dim numSubjects As Integer
Dim MainSubreport As String

numSubjects = UBound(Subjects)

'Then set the individual subject reports
'If the number of subjects is less than three then use the wide reports
If numSubjects < 3 Then
    'use the wide reports
    'Set subject for report's 1st subject
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject1Wide", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject1Wide].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject1Wide].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(0) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject1Wide].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject1Wide", acSaveYes
    If numSubjects = 2 Then
    'Set subject for report's 2nd subject
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject2Wide", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject2Wide].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject2Wide].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(1) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject2Wide].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject2Wide", acSaveYes
    End If
Else
    'Set subject for report's 1st subject
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject1", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject1].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject1].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(0) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject1].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject1", acSaveYes
    'Set subject for report's 2nd subject
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject2", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject2].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject2].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(1) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject2].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject2", acSaveYes
    'set subject for report's 3rd subject
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject3", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject3].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject3].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(2) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject3].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject3", acSaveYes
    'if number of subjects = 4 then set subject for report's 4th subject
    If numSubjects = 4 Then
    DoCmd.OpenReport "rsubReportingStateCoverageSummarySubject4", acViewDesign
    Reports![rsubReportingStateCoverageSummarySubject4].RecordSource = "tblReportingStateCoverageSummary"
    Reports![rsubReportingStateCoverageSummarySubject4].Filter = "[tblReportingStateCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(3) & Chr(34)
    Reports![rsubReportingStateCoverageSummarySubject4].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateCoverageSummarySubject4", acSaveYes
    End If
End If

MainSubreport = "Report.rsubReportingStateCoverageSummary" & numSubjects

'set the correct subreport
    DoCmd.OpenReport "rptReportingStateCoverageSummary", acViewDesign
    Reports![rptReportingStateCoverageSummary]!CoverageSubreport.SourceObject = MainSubreport
    DoCmd.Close acReport, "rptReportingStateCoverageSummary", acSaveYes
End Sub
Sub SetSummaryDisclaimers(ReportName As String)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim Disclaimer As String
Dim ReportType As String

Set db = CurrentDb

'--------------------------------------
'First set the disclaimer
'--------------------------------------
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot)

ReportType = "Summary"

DoCmd.OpenReport ReportName, acViewDesign
While rsDisclaimer.EOF = False
    'check for match
    If rsDisclaimer.Fields.Item(1).Value = ReportType Then
        'get value
        Disclaimer = rsDisclaimer.Fields(2)
        Text75.ControlSource = Disclaimer
        'exit loop
        rsDisclaimer.MoveLast
    End If
    rsDisclaimer.MoveNext
Wend
rsDisclaimer.Close
End Sub
Sub SetBloomSummaryReport(Subjects As Variant)
Dim numSubjects As Integer
Dim MainSubreport As String

numSubjects = UBound(Subjects)

'Then set the individual subject reports
    'Set subject for report's 1st subject
    DoCmd.OpenReport "rsubReportingStateBloomSummarySubject1", acViewDesign
    Reports![rsubReportingStateBloomSummarySubject1].RecordSource = "tblReportingStateBloomSummary"
    Reports![rsubReportingStateBloomSummarySubject1].Filter = "[tblReportingStateBloomSummary].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
    Reports![rsubReportingStateBloomSummarySubject1].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateBloomSummarySubject1", acSaveYes
    If numSubjects > 1 Then
        'Set subject for report's 2nd subject
        DoCmd.OpenReport "rsubReportingStateBloomSummarySubject2", acViewDesign
        Reports![rsubReportingStateBloomSummarySubject2].RecordSource = "tblReportingStateBloomSummary"
        Reports![rsubReportingStateBloomSummarySubject2].Filter = "[tblReportingStateBloomSummary].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
        Reports![rsubReportingStateBloomSummarySubject2].FilterOn = True
        DoCmd.Close acReport, "rsubReportingStateBloomSummarySubject2", acSaveYes
        If numSubjects > 2 Then
        'set subject for report's 3rd subject
        DoCmd.OpenReport "rsubReportingStateBloomSummarySubject3", acViewDesign
        Reports![rsubReportingStateBloomSummarySubject3].RecordSource = "tblReportingStateBloomSummary"
        Reports![rsubReportingStateBloomSummarySubject3].Filter = "[tblReportingStateBloomSummary].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
        Reports![rsubReportingStateBloomSummarySubject3].FilterOn = True
        DoCmd.Close acReport, "rsubReportingStateBloomSummarySubject3", acSaveYes
    
    'if number of subjects = 4 then set subject for report's 4th subject
    If numSubjects = 4 Then
    DoCmd.OpenReport "rsubReportingStateBloomSummarySubject4", acViewDesign
    Reports![rsubReportingStateBloomSummarySubject4].RecordSource = "tblReportingStateBloomSummary"
    Reports![rsubReportingStateBloomSummarySubject4].Filter = "[tblReportingStateBloomSummary].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
    Reports![rsubReportingStateBloomSummarySubject4].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateBloomSummarySubject4", acSaveYes
    End If
    End If
End If

MainSubreport = "Report.rsubReportingStateBloomSummary" & numSubjects

'set the correct subreport
    DoCmd.OpenReport "rptReportingStateBloomSummary", acViewDesign
    Reports![rptReportingStateBloomSummary]!BloomSubreport.SourceObject = MainSubreport
    DoCmd.Close acReport, "rptReportingStateBloomSummary", acSaveYes
End Sub
Sub SetDOKSummaryReport(Subjects As Variant)
Dim numSubjects As Integer
Dim MainSubreport As String

numSubjects = UBound(Subjects)

'Then set the individual subject reports
    'Set subject for report's 1st subject
    DoCmd.OpenReport "rsubReportingStateDOKSummarySubject1", acViewDesign
    Reports![rsubReportingStateDOKSummarySubject1].RecordSource = "tblReportingStateDOKSummary"
    Reports![rsubReportingStateDOKSummarySubject1].Filter = "[tblReportingStateDOKSummary].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
    Reports![rsubReportingStateDOKSummarySubject1].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateDOKSummarySubject1", acSaveYes
    If numSubjects > 1 Then
        'Set subject for report's 2nd subject
        DoCmd.OpenReport "rsubReportingStateDOKSummarySubject2", acViewDesign
        Reports![rsubReportingStateDOKSummarySubject2].RecordSource = "tblReportingStateDOKSummary"
        Reports![rsubReportingStateDOKSummarySubject2].Filter = "[tblReportingStateDOKSummary].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
        Reports![rsubReportingStateDOKSummarySubject2].FilterOn = True
        DoCmd.Close acReport, "rsubReportingStateDOKSummarySubject2", acSaveYes
        If numSubjects > 2 Then
        'set subject for report's 3rd subject
        DoCmd.OpenReport "rsubReportingStateDOKSummarySubject3", acViewDesign
        Reports![rsubReportingStateDOKSummarySubject3].RecordSource = "tblReportingStateDOKSummary"
        Reports![rsubReportingStateDOKSummarySubject3].Filter = "[tblReportingStateDOKSummary].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
        Reports![rsubReportingStateDOKSummarySubject3].FilterOn = True
        DoCmd.Close acReport, "rsubReportingStateDOKSummarySubject3", acSaveYes
    
    'if number of subjects = 4 then set subject for report's 4th subject
    If numSubjects = 4 Then
    DoCmd.OpenReport "rsubReportingStateDOKSummarySubject4", acViewDesign
    Reports![rsubReportingStateDOKSummarySubject4].RecordSource = "tblReportingStateDOKSummary"
    Reports![rsubReportingStateDOKSummarySubject4].Filter = "[tblReportingStateDOKSummary].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
    Reports![rsubReportingStateDOKSummarySubject4].FilterOn = True
    DoCmd.Close acReport, "rsubReportingStateDOKSummarySubject4", acSaveYes
    End If
    End If
End If

MainSubreport = "Report.rsubReportingStateDOKSummary" & numSubjects

'set the correct subreport
    DoCmd.OpenReport "rptReportingStateDOKSummary", acViewDesign
    Reports![rptReportingStateDOKSummary]!DOKSubreport.SourceObject = MainSubreport
    DoCmd.Close acReport, "rptReportingStateDOKSummary", acSaveYes
End Sub

Sub SetSpanishCoverageSummaryReport(Subjects As Variant)
Dim numSubjects As Integer
Dim MainSubreport As String

numSubjects = UBound(Subjects)
    
    'Then set the individual subject reports
        'Set subject for report's 1st subject
        DoCmd.OpenReport "rsubReportingStateSpanishCoverageSummarySubject1", acViewDesign
        Reports![rsubReportingStateSpanishCoverageSummarySubject1].RecordSource = "tblReportingStateSpanishCoverageSummary"
        Reports![rsubReportingStateSpanishCoverageSummarySubject1].Filter = "[tblReportingStateSpanishCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(0) & Chr(34)
        Reports![rsubReportingStateSpanishCoverageSummarySubject1].FilterOn = True
        DoCmd.Close acReport, "rsubReportingStateSpanishCoverageSummarySubject1", acSaveYes
        If numSubjects > 1 Then
            'Set subject for report's 2nd subject
            DoCmd.OpenReport "rsubReportingStateSpanishCoverageSummarySubject2", acViewDesign
            Reports![rsubReportingStateSpanishCoverageSummarySubject2].RecordSource = "tblReportingStateSpanishCoverageSummary"
            Reports![rsubReportingStateSpanishCoverageSummarySubject2].Filter = "[tblReportingStateSpanishCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(1) & Chr(34)
            Reports![rsubReportingStateSpanishCoverageSummarySubject2].FilterOn = True
            DoCmd.Close acReport, "rsubReportingStateSpanishCoverageSummarySubject2", acSaveYes
            If numSubjects > 2 Then
            'set subject for report's 3rd subject
            numSubjects = 3
            If Subjects(2) = "Science" Then
                DoCmd.OpenReport "rsubReportingStateSpanishCoverageSummarySubject3", acViewDesign
                Reports![rsubReportingStateSpanishCoverageSummarySubject3].RecordSource = "tblReportingStateSpanishCoverageSummary"
                Reports![rsubReportingStateSpanishCoverageSummarySubject3].Filter = "[tblReportingStateSpanishCoverageSummary].[Reporting Subject]=" & Chr(34) & Subjects(2) & Chr(34)
                Reports![rsubReportingStateSpanishCoverageSummarySubject3].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSpanishCoverageSummarySubject3", acSaveYes
            End If
        End If
    End If

MainSubreport = "Report.rsubReportingStateSpanishCoverageSummary" & numSubjects

'set the correct subreport
    DoCmd.OpenReport "rptReportingStateSpanishCoverageSummary", acViewDesign
    Reports![rptReportingStateSpanishCoverageSummary]!SpanishCoverageSubreport.SourceObject = MainSubreport
    DoCmd.Close acReport, "rptReportingStateSpanishCoverageSummary", acSaveYes
End Sub

Sub SetItemTypeSummaryReport(Subjects As Variant, MultipleChoiceStatus As Boolean, ConstructedResponseStatus As Boolean, WritingPromptAlignmentStatus As Boolean, TEIStatus As Boolean, MultipartStatus As Boolean)
Dim numSubjects As Integer
Dim MainSubreport As String
Dim WritingPromptFlag As String
Dim MultipleChoiceFlag As String
Dim ConstructedResponseFlag As String
Dim TEIFlag As String

Dim subreport1 As String
Dim subreport2 As String
Dim subreport3 As String
Dim subreport4 As String

numSubjects = UBound(Subjects)

'Note: This subroutine assumes that Science and Social Studies have only MC and CR items
'Note: My VBA experience to date has indicated that the report properties cannot be set if the report name is a variable. This means that the different
'permutations of report names must be hard-coded instead of handled use a variable. I sincerely wish this were not so.
'Note: Because Writing Prompts are only applicable when ELA is included in the request, this permutation is handeled within the subject-specific
'if statements, not in the item-type if-statements

'Use If-Else statements to determine which types of reports need to be configured
If MultipleChoiceStatus = True Then
    If ConstructedResponseStatus = True Then
        If TEIStatus = True Then
            If MultipartStatus = True Then
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation MC_CR_WP_TEI_MP and MC_CR_NoWP_TEI_MP
            'Set subject for report's 1st subject
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_MP"
            ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                'If subject is Math or ELA, then TEI status is yes. If not TEI status is no
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_MP"
            Else 'Subject(1) must be Science or Social Studies'
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP"
            End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                'If subject is Math, then TEI and MP status is yes. If not TEI and MP status is no
                If Subjects(1) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP"
                End If
                If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_CR"
                    'if number of subjects = 4 then set subject for report's 4th subject
                    If numSubjects = 4 Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acSaveYes
                        subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_CR"
                    End If
                End If
            End If
            Else 'TEI Status is true and MP status is False
                'Format the reports for this permutation
                'Set the individual subject reports for this permutation MC_CR_WP_TEI_NoMP and MC_CR_NoWP_TEI_NoMP
                'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_TEI_NoMP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                    'If subject is Math or ELA, then TEI status is yes. If not TEI status is no
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_TEI_NoMP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_CR_TEI_NoMP"
                    Else 'Subjects(1) = "Science" or "Social Studies"
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                    End If
                    If numSubjects > 2 Then
                        'set subject for report's 3rd subject
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_CR"
                        'if number of subjects = 4 then set subject for report's 4th subject
                        If numSubjects = 4 Then
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_CR"
                        End If
                    End If
                End If
            End If
        Else 'TEIStatus = False
        If MultipartStatus = True Then
        
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation MC_CR_WP_NoTEI and MC_CR_NoWP_NoTEI
            'Set subject for report's 1st subject
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_MP"
            ElseIf Subjects(0) = "English Language Arts" Or Subjects(0) = "Mathematics" Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_MP"
            Else
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
            End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                'If subject is Math or Science, then CR status is yes. If not CR status is no
                If Subjects(1) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                End If
                If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                    'If subject is science, then CR is yes. If not CR is no
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acSaveYes
                    subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_CR"
                    'if number of subjects = 4 then set subject for report's 4th subject
                    If numSubjects = 4 Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acSaveYes
                        subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_CR"
                    End If
                End If
            End If
        Else 'TEIStatus and MPStatus = False
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation MC_CR_WP_NoTEI and MC_CR_NoWP_NoTEI
            'Set subject for report's 1st subject
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_CR_WP_NoTEI_NoMP"
            Else
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_CR_NoWP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
            End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP", acSaveYes
                subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_CR_NoTEI_NoMP"
                If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj3MC_CR].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_CR", acSaveYes
                    subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_CR"
                    'if number of subjects = 4 then set subject for report's 4th subject
                    If numSubjects = 4 Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj4MC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_CR", acSaveYes
                        subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_CR"
                    End If
                End If
            End If
        End If
        End If
    Else 'ConstructedResponseStatus = False
        If TEIStatus = True Then
            If MultipartStatus = True Then
            'Format the reports for this permutation
            'Set the individual subject reports for this permutation MC_NoCR_WP_TEI_MP and MC_NoCR_NoWP_TEI_MP
                'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_MP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                        'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC items
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC and MP items
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_MP"
                    Else
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                    End If
                    If numSubjects > 2 Then
                        'set subject for report's 3rd subject
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acSaveYes
                            subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR"
                            If numSubjects = 4 Then
                                'if number of subjects = 4 then set subject for report's 4th subject
                                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acViewDesign
                                Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                                Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                                Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].FilterOn = True
                                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acSaveYes
                                subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR"
                            End If
                    End If
                End If
            Else 'MultipartStatus = False
            'Format the reports for this permutation
            'Set the individual subject reports for this permutation MC_NoCR_WP_TEI and MC_NoCR_NoWP_TEI
                'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_TEI_NoMP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                    'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC items
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_TEI_NoMP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC and MP items
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_TEI_NoMP"
                    Else
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                    End If
                    If numSubjects > 2 Then
                        'set subject for report's 3rd subject
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acSaveYes
                            subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR"
                        'if number of subjects = 4 then set subject for report's 4th subject
                        If numSubjects = 4 Then
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR"
                        End If
                    End If

                End If
            End If
        Else 'TEIStatus = False
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation MC_NoCR_WP_NoTEI_MP and MC_NoCR_NoWP_NoTEI_MP
            'Set subject for report's 1st subject
            If MultipartStatus = True Then
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_MP"
                ElseIf Subjects(0) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_MP"
                    Else
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                    End If
                    If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR"
                        If numSubjects = 4 Then
                            'if number of subjects = 4 then set subject for report's 4th subject
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR"
                        End If
                    End If
                End If
            Else 'Multipartstatus = False
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_WP_NoTEI_NoMP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1MC_NoCR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2MC_NoCR_NoTEI_NoMP"
                    If numSubjects > 2 Then
                        'set subject for report's 3rd subject
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3MC_NoCR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3MC_NoCR"
                        'if number of subjects = 4 then set subject for report's 4th subject
                        If numSubjects = 4 Then
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4MC_NoCR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4MC_NoCR"
                        End If
                    End If
                End If
            End If
        End If
    End If
Else 'MultipleChoiceStatus = False
    If ConstructedResponseStatus = True Then
        If TEIStatus = True Then
            If MultipartStatus = True Then
            'Format the reports for this permutation
            'Set the individual subject reports for this permutation NoMC_CR_WP_TEI and NoMC_CR_NoWP_TEI
                'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_MP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                    'If subject is Math, then TEI status is yes. If not TEI status is no
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_MP"
                    Else
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP"
                    End If
                    If numSubjects > 2 Then
                        'set subject for report's 3rd subject
                        'If subject is science, then CR is yes. If not CR is no
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR"
                        If numSubjects = 4 Then
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(44) & Subjects(4) & Chr(44)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR"
                        End If
                    End If
                End If
            Else 'MultipartStatus = False
            'Format the reports for this permutation
            'Set the individual subject reports for this permutation NoMC_CR_WP_TEI and NoMC_CR_NoWP_TEI
                'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_TEI_NoMP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                    'If subject is Math, then TEI status is yes. If not TEI status is no
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_TEI_NoMP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_TEI_NoMP"
                    Else
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP"
                    End If
                    If numSubjects > 2 Then
                        'set subject for report's 3rd and 4th subjects
                        'If subject is science, then CR is yes. If not CR is no
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(3) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acSaveYes
                        subreport3 = "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR"
                        If numSubjects = 4 Then
                            DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acViewDesign
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(44) & Subjects(4) & Chr(44)
                            Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].FilterOn = True
                            DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acSaveYes
                            subreport4 = "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR"
                        End If
                    End If
                End If
            End If
        Else 'TEIStatus = False
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation NoMC_CR_WP_NoTEI and NoMC_CR_NoWP_NoTEI
            'Set subject for report's 1st subject
        If MultipartStatus = True Then
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_MP"
                ElseIf Subjects(0) = "English Language Arts" Or Subjects(0) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_MP"
                Else 'Subject is Science or Social Studies
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP"
                End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                'If subject is Math or Science, then CR status is yes. If not CR status is no
                If Subjects(1) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_MP"
                Else
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP"
                End If
                If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                    'If subject is science, then CR is yes. If not CR is no
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acSaveYes
                    subreport3 = "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR"
                    If numSubjects = 4 Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(44) & Subjects(2) & Chr(44)
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acSaveYes
                        subreport4 = "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR"
                    End If
                End If
            End If
        Else 'MultipartStatus = False
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_WP_NoTEI_NoMP"
             Else
                'If subject is Math or Science, then CR status is yes. If not CR status is no and no report can be made
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_CR_NoWP_NoTEI_NoMP"
            End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                'If subject is Math or Science, then CR status is yes. If not CR status is no
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP", acSaveYes
                subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_CR_NoTEI_NoMP"
                If numSubjects > 2 Then
                    'set subject for report's 3rd subject
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(2) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj3NoMC_CR].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR", acSaveYes
                    subreport3 = "rsubReportingStateSummaryByItemTypeSubj3NoMC_CR"
                    If numSubjects = 4 Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(44) & Subjects(2) & Chr(44)
                        Reports![rsubReportingStateSummaryByItemTypeSubj4NoMC_CR].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR", acSaveYes
                        subreport4 = "rsubReportingStateSummaryByItemTypeSubj4NoMC_CR"
                    End If
                End If
            End If
        End If
                
        End If
    Else 'ConstructedResponseStatus = False
        If TEIStatus = True Then
        
            If MultipartStatus = True Then
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation NoMC_NoCR_WP_TEI and NoMC_NoCR_NoWP_TEI
            'Set subject for report's 1st subject
                If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_MP"
                ElseIf Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MP items
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_MP"
                End If
                If numSubjects > 1 Then
                    'Set subject for report's 2nd subject
                    'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC items
                    If Subjects(1) = "Mathematics" Then
                        DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP", acViewDesign
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                        Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP].FilterOn = True
                        DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP", acSaveYes
                        subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_MP"
                        numSubjects = 2 'if MC and CR not allowed, then no science or social studies in reports
                    End If
                End If
            Else 'MultipartStatus = False
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_TEI_NoMP"
            Else
                'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC items
                If Subjects(0) = "Mathematics" Or Subjects(0) = "English Language Arts" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP", acSaveYes
                    subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_TEI_NoMP"
                End If
            End If
            If numSubjects > 1 Then
                'Set subject for report's 2nd subject
                'If subject is Math, then TEI status is yes. If not TEI status is no and report just has MC items
                If Subjects(1) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP", acSaveYes
                    subreport2 = "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_TEI_NoMP"
                    numSubjects = 2 'if MC and CR not allowed, then no science or social studies in reports
                End If
            End If
            End If
        Else 'TEIStatus = False
        If MultipartStatus = True Then
        'Format the reports for this permutation
        'Set the individual subject reports for this permutation NoMC_NoCR_WP_NoTEI and NoMC_NoCR_NoWP_NoTEI
            'Set subject for report's 1st subject
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_MP"
            ElseIf Subjects(0) = "English Language Arts" Or "Mathematics" Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_NoTEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_NoTEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_NoWP_NoTEI_MP", acSaveYes
                If Subjects(1) = "Mathematics" Then
                    DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP", acViewDesign
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                    Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].FilterOn = True
                    DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP", acSaveYes
                End If
            End If
            If Subjects(1) = "Mathematics" Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(1) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj2NoMC_NoCR_NoTEI_MP", acSaveYes
                numSubjects = 2 'If MC, CR, and TEI not allowed, then only writing prompts and multipart are in the report
            Else
                numSubjects = 1 'If MC, CR, and TEI not allowed, then only MP and WP allowed
            End If
            
        Else 'MultipartStatus = False
            If Subjects(0) = "English Language Arts" And WritingPromptAlignmentStatus = True Then
                DoCmd.OpenReport "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP", acViewDesign
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP].RecordSource = "tblReportingStateUniqueItemsByItemTypeAndGrade"
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP].Filter = "[tblReportingStateUniqueItemsByItemTypeAndGrade].[Report Subjects]=" & Chr(34) & Subjects(0) & Chr(34)
                Reports![rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP].FilterOn = True
                DoCmd.Close acReport, "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP", acSaveYes
                subreport1 = "rsubReportingStateSummaryByItemTypeSubj1NoMC_NoCR_WP_NoTEI_NoMP"
                numSubjects = 1 'If MC, CR, and TEI not allowed, then only writing prompts are in the report
            End If
        End If
    End If
    End If
End If

'Set and configure the subreport that houses the individual summaries
If numSubjects = 1 Then
    MainSubreport = "rsubReportingStateItemTypeSummary1"
    DoCmd.OpenReport "rsubReportingStateItemTypeSummary1", acViewDesign
    Reports![rsubReportingStateItemTypeSummary1]!rsub1.SourceObject = subreport1
    DoCmd.Close acReport, "rsubReportingStateItemTypeSummary1", acSaveYes
ElseIf numSubjects = 2 Then
    MainSubreport = "rsubReportingStateItemTypeSummary2"
    DoCmd.OpenReport "rsubReportingStateItemTypeSummary2", acViewDesign
    Reports![rsubReportingStateItemTypeSummary2]!rsub1.SourceObject = subreport1
    Reports![rsubReportingStateItemTypeSummary2]!rsub2.SourceObject = subreport2
    DoCmd.Close acReport, "rsubReportingStateItemTypeSummary2", acSaveYes
ElseIf numSubjects = 3 Then
    MainSubreport = "rsubReportingStateItemTypeSummary3"
    DoCmd.OpenReport "rsubReportingStateItemTypeSummary3", acViewDesign
    Reports![rsubReportingStateItemTypeSummary3]!rsub1.SourceObject = subreport1
    Reports![rsubReportingStateItemTypeSummary3]!rsub2.SourceObject = subreport2
    Reports![rsubReportingStateItemTypeSummary3]!rsub3.SourceObject = subreport3
    DoCmd.Close acReport, "rsubReportingStateItemTypeSummary3", acSaveYes
Else
    MainSubreport = "rsubReportingStateItemTypeSummary4"
    DoCmd.OpenReport "rsubReportingStateItemTypeSummary4", acViewDesign
    Reports![rsubReportingStateItemTypeSummary4]!rsub1.SourceObject = subreport1
    Reports![rsubReportingStateItemTypeSummary4]!rsub2.SourceObject = subreport2
    Reports![rsubReportingStateItemTypeSummary4]!rsub3.SourceObject = subreport3
    Reports![rsubReportingStateItemTypeSummary4]!rsub4.SourceObject = subreport4
    DoCmd.Close acReport, "rsubReportingStateItemTypeSummary4", acSaveYes
End If

'set the correct subreport
    DoCmd.OpenReport "rptReportingStateRegularSummaryByItemType", acViewDesign
    Reports![rptReportingStateRegularSummaryByItemType]!ItemTypeSubreport.SourceObject = MainSubreport
    DoCmd.Close acReport, "rptReportingStateRegularSummaryByItemType", acSaveYes
End Sub
Sub SetCoverageReportDisclaimers(Subjects As Variant, WritingPromptAlignmentStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim numSubjects As Integer
Dim Summary As String
Dim SpanishSummary As String
Dim ELA As String
Dim Math As String
Dim Science As String
Dim SOC As String
Dim NO_TEI As String
Dim ELA_WritingPrompt As String

numSubjects = UBound(Subjects)

Set db = CurrentDb
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot)

'Get disclaimer values
Summary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SpanishSummary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Math = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Science = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SOC = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
NO_TEI = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA_WritingPrompt = rsDisclaimer.Fields(2)
rsDisclaimer.Close

Dim index As Integer

'Set subject for report's 1st subject
If Subjects(0) = "English Language Arts" Then
    DoCmd.OpenReport "rsubReportingStateCoverageELA", acViewDesign
    Reports!rsubReportingStateCoverageELA.Text75.ControlSource = ELA
    DoCmd.Close acReport, "rsubReportingStateCoverageELA", acSaveYes
    If WritingPromptAlignmentStatus = True Then
        DoCmd.OpenReport "rsubReportingStateCoverageWritingPrompt", acViewDesign
        Reports!rsubReportingStateCoverageWritingPrompt.Text75.ControlSource = ELA_WritingPrompt
        DoCmd.Close acReport, "rsubReportingStateCoverageWritingPrompt", acSaveYes
    End If
    If ELA_LiteracyStatus = True Then
        DoCmd.OpenReport "rsubReportingStateCoverageELA_LiteracyReadingAndWriting", acViewDesign
        Reports!rsubReportingStateCoverageELA_LiteracyReadingAndWriting.Text75.ControlSource = ELA
        DoCmd.Close acReport, "rsubReportingStateCoverageELA_LiteracyReadingAndWriting", acSaveYes
        If WritingPromptAlignmentStatus = True Then
            DoCmd.OpenReport "rsubReportingStateCoverageELA_LiteracyWritingPrompt", acViewDesign
            Reports!rsubReportingStateCoverageELA_LiteracyWritingPrompt.Text75.ControlSource = ELA_WritingPrompt
            DoCmd.Close acReport, "rsubReportingStateCoverageELA_LiteracyWritingPrompt", acSaveYes
        End If
    End If
End If

index = 1

While index < numSubjects + 1
If Subjects(index) = "Mathematics" Then
    DoCmd.OpenReport "rsubReportingStateCoverageMath", acViewDesign
    Reports!rsubReportingStateCoverageMath.Text75.ControlSource = Math
    DoCmd.Close acReport, "rsubReportingStateCoverageMath", acSaveYes
    If MathPracticeStatus = True Then
        DoCmd.OpenReport "rsubReportingStateCoverageMathPractice", acViewDesign
        Reports!rsubReportingStateCoverageMathPractice.Text75.ControlSource = Math
        DoCmd.Close acReport, "rsubReportingStateCoverageMathPractice", acSaveYes
    End If
End If
If Subjects(index) = "Science" Then
    DoCmd.OpenReport "rsubReportingStateCoverageScience", acViewDesign
    Reports!rsubReportingStateCoverageScience.Text75.ControlSource = Science
    DoCmd.Close acReport, "rsubReportingStateCoverageScience", acSaveYes
End If
If Subjects(index) = "Social Studies" Then
    DoCmd.OpenReport "rsubReportingStateCoverageSoc", acViewDesign
    Reports!rsubReportingStateCoverageSoc.Text75.ControlSource = SOC
    DoCmd.Close acReport, "rsubReportingStateCoverageSoc", acSaveYes
End If
index = index + 1
Wend

End Sub
Sub SetSpanishCoverageReportDisclaimers(Subjects As Variant, WritingPromptAlignmentStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim numSubjects As Integer
Dim Summary As String
Dim SpanishSummary As String
Dim ELA As String
Dim Math As String
Dim Science As String
Dim SOC As String
Dim NO_TEI As String
Dim ELA_WritingPrompt As String

numSubjects = UBound(Subjects)

Set db = CurrentDb
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot)

'Get disclaimer values
Summary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SpanishSummary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Math = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Science = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SOC = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
NO_TEI = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA_WritingPrompt = rsDisclaimer.Fields(2)
rsDisclaimer.Close

Dim index As Integer

'Set subject for report's 1st subject
If Subjects(0) = "English Language Arts" Then
    DoCmd.OpenReport "rsubReportingStateSpanishCoverageELA", acViewDesign
    Reports!rsubReportingStateSpanishCoverageELA.Text75.ControlSource = NO_TEI
    DoCmd.Close acReport, "rsubReportingStateSpanishCoverageELA", acSaveYes
    If ELA_LiteracyStatus = True Then
        DoCmd.OpenReport "rsubReportingStateSpanishCoverageELA_LiteracyReadingAndWriting", acViewDesign
        Reports!rsubReportingStateSpanishCoverageELA_LiteracyReadingAndWriting.Text75.ControlSource = NO_TEI
        DoCmd.Close acReport, "rsubReportingStateSpanishCoverageELA_LiteracyReadingAndWriting", acSaveYes
    End If
End If

index = 1

While index < numSubjects + 1
If Subjects(index) = "Mathematics" Then
    DoCmd.OpenReport "rsubReportingStateSpanishCoverageMath", acViewDesign
    Reports!rsubReportingStateSpanishCoverageMath.Text75.ControlSource = NO_TEI
    DoCmd.Close acReport, "rsubReportingStateSpanishCoverageMath", acSaveYes
    If MathPracticeStatus = True Then
        DoCmd.OpenReport "rsubReportingStateSpanishCoverageMathPractice", acViewDesign
        Reports!rsubReportingStateSpanishCoverageMathPractice.Text75.ControlSource = NO_TEI
        DoCmd.Close acReport, "rsubReportingStateSpanishCoverageMathPractice", acSaveYes
    End If
End If
If Subjects(index) = "Science" Then
    DoCmd.OpenReport "rsubReportingStateSpanishCoverageScience", acViewDesign
    Reports!rsubReportingStateSpanishCoverageScience.Text75.ControlSource = Science
    DoCmd.Close acReport, "rsubReportingStateSpanishCoverageScience", acSaveYes
End If
index = index + 1
Wend

End Sub

Sub SetBloomCoverageReportDisclaimers(Subjects As Variant, WritingPromptAlignmentStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim numSubjects As Integer
Dim Summary As String
Dim SpanishSummary As String
Dim ELA As String
Dim Math As String
Dim Science As String
Dim SOC As String
Dim NO_TEI As String
Dim ELA_WritingPrompt As String

numSubjects = UBound(Subjects)

Set db = CurrentDb
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot)

'Get disclaimer values
Summary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SpanishSummary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Math = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Science = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SOC = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
NO_TEI = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA_WritingPrompt = rsDisclaimer.Fields(2)
rsDisclaimer.Close

Dim index As Integer

'Set subject for report's 1st subject
If Subjects(0) = "English Language Arts" Then
    DoCmd.OpenReport "rsubReportingStateBloomELA", acViewDesign
    Reports!rsubReportingStateBloomELA.Text75.ControlSource = ELA
    DoCmd.Close acReport, "rsubReportingStateBloomELA", acSaveYes
    If (WritingPromptAlignmentStatus = True Or ELA_LiteracyStatus = True) Then
        DoCmd.OpenReport "rsubReportingStateBloomELA", acViewDesign
        Reports!rsubReportingStateBloomELA.Text75.ControlSource = Summary
        DoCmd.Close acReport, "rsubReportingStateBloomELA", acSaveYes
    End If
End If

index = 1

While index < numSubjects + 1
If Subjects(index) = "Mathematics" Then
    DoCmd.OpenReport "rsubReportingStateBloomMath", acViewDesign
    Reports!rsubReportingStateBloomMath.Text75.ControlSource = Math
    DoCmd.Close acReport, "rsubReportingStateBloomMath", acSaveYes
    If MathPracticeStatus = True Then
        DoCmd.OpenReport "rsubReportingStateBloomMath", acViewDesign
        Reports!rsubReportingStateBloomMath.Text75.ControlSource = Summary
        DoCmd.Close acReport, "rsubReportingStateBloomMath", acSaveYes
    End If
End If
If Subjects(index) = "Science" Then
    DoCmd.OpenReport "rsubReportingStateBloomScience", acViewDesign
    Reports!rsubReportingStateBloomScience.Text75.ControlSource = Science
    DoCmd.Close acReport, "rsubReportingStateBloomScience", acSaveYes
End If
If Subjects(index) = "Social Studies" Then
    DoCmd.OpenReport "rsubReportingStateBloomSoc", acViewDesign
    Reports!rsubReportingStateBloomSoc.Text75.ControlSource = SOC
    DoCmd.Close acReport, "rsubReportingStateBloomSoc", acSaveYes
End If
index = index + 1
Wend

End Sub
Sub SetDOKCoverageReportDisclaimers(Subjects As Variant, WritingPromptAlignmentStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean)
Dim db As Database
Dim rsDisclaimer As Recordset
Dim numSubjects As Integer
Dim Summary As String
Dim SpanishSummary As String
Dim ELA As String
Dim Math As String
Dim Science As String
Dim SOC As String
Dim NO_TEI As String
Dim ELA_WritingPrompt As String

numSubjects = UBound(Subjects)

Set db = CurrentDb
Set rsDisclaimer = db.OpenRecordset("tblDisclaimer", dbOpenSnapshot)

'Get disclaimer values
Summary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SpanishSummary = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Math = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
Science = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
SOC = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
NO_TEI = rsDisclaimer.Fields(2)
rsDisclaimer.MoveNext
ELA_WritingPrompt = rsDisclaimer.Fields(2)
rsDisclaimer.Close

Dim index As Integer

'Set subject for report's 1st subject
If Subjects(0) = "English Language Arts" Then
    DoCmd.OpenReport "rsubReportingStateDOKELA", acViewDesign
    Reports!rsubReportingStateDOKELA.Text75.ControlSource = ELA
    DoCmd.Close acReport, "rsubReportingStateDOKELA", acSaveYes
    If (WritingPromptAlignmentStatus = True Or ELA_LiteracyStatus = True) Then
        DoCmd.OpenReport "rsubReportingStateDOKELA", acViewDesign
        Reports!rsubReportingStateDOKELA.Text75.ControlSource = Summary
        DoCmd.Close acReport, "rsubReportingStateDOKELA", acSaveYes
    End If
End If

index = 1

While index < numSubjects + 1
If Subjects(index) = "Mathematics" Then
    DoCmd.OpenReport "rsubReportingStateDOKMath", acViewDesign
    Reports!rsubReportingStateDOKMath.Text75.ControlSource = Math
    DoCmd.Close acReport, "rsubReportingStateDOKMath", acSaveYes
    If MathPracticeStatus = True Then
        DoCmd.OpenReport "rsubReportingStateDOKMath", acViewDesign
        Reports!rsubReportingStateDOKMath.Text75.ControlSource = Summary
        DoCmd.Close acReport, "rsubReportingStateDOKMath", acSaveYes
    End If
End If
If Subjects(index) = "Science" Then
    DoCmd.OpenReport "rsubReportingStateDOKScience", acViewDesign
    Reports!rsubReportingStateDOKScience.Text75.ControlSource = Science
    DoCmd.Close acReport, "rsubReportingStateDOKScience", acSaveYes
End If
If Subjects(index) = "Social Studies" Then
    DoCmd.OpenReport "rsubReportingStateDOKSoc", acViewDesign
    Reports!rsubReportingStateDOKSoc.Text75.ControlSource = SOC
    DoCmd.Close acReport, "rsubReportingStateDOKSoc", acSaveYes
End If
index = index + 1
Wend

End Sub

Sub SetSimpleTEI_DOK_Report()
    DoCmd.OpenQuery "qryReportingStateAlignmentByItemTypeByStandard"
    DoCmd.OpenQuery "qryReportingStateAlignmentBySimpleItemTypeAndStandard"
    DoCmd.OpenQuery "qryReportingStateDOKByStandard"
    DoCmd.OpenQuery "qryReportingStateAlignmentByTEIAndStandard"
    DoCmd.OpenQuery "qryReportingStateDOKByStandard_Crosstab Make Table"
    DoCmd.OpenQuery "qryReportingStateAlignmentByTEIandDOK"
End Sub


'------------------------------------------------------------
' This module collectively updates all of the Tables and generates
' alignment reports for DVDs.
'------------------------------------------------------------
Sub AlignmentReportsForDVDs(StateNumber As Integer, StateAbbreviation As String, WritingPromptStatus As Boolean, MathPracticeStatus As Boolean, ELA_LiteracyStatus As Boolean, MultipartAlignmentStatus As Boolean, EdGateStatus As Boolean, AlignmentReportStatus As Boolean)
' set variables
Dim db As Database
Dim rs As Recordset
Dim rsCounts As Recordset
Dim AlignmentReportWithGUIDsFileName As String
Dim AlignmentReportWithoutGUIDsFileName As String
Dim MathPracticeAlignmentReportWithGUIDsFileName As String
Dim MathPracticeAlignmentReportWithoutGUIDsFileName As String
Dim WritingPromptAlignmentReportWithGUIDsFileName As String
Dim WritingPromptAlignmentReportWithoutGUIDsFileName As String
Dim LiteracyAlignmentReportWithGUIDsFileName As String
Dim LiteracyAlignmentReportWithoutGUIDsFileName As String
Dim MultipartAlignmentReportWithGUIDsFileName As String
Dim MultipartAlignmentReportWithoutGUIDsFileName As String
Dim MultipartMathPracticeAlignmentReportWithGUIDsFileName As String
Dim MultipartMathPracticeAlignmentReportWithoutGUIDsFileName As String
Dim WithGUIDsCount As Long
Dim WithoutGUIDSCount As Long
Dim MathPracticeWithGUIDsCount As Long
Dim MathPracticeWithoutGUIDsCount As Long
Dim WritingPromptWithGUIDsCount As Long
Dim WritingPromptWithoutGUIDsCount As Long
Dim LiteracyWithGUIDsCount As Long
Dim LiteracyWithoutGUIDsCount As Long
Dim MultipartWithGUIDsCount As Long
Dim MultipartWithoutGUIDsCount As Long
Dim MultipartMathPracticeWithGUIDsCount As Long
Dim MultipartMathPracticeWithoutGUIDsCount As Long

Dim AlignmentReportSlimFileName As String
Dim MathPracticeAlignmentReportSlimFileName As String
Dim WritingPromptAlignmentReportSlimFileName As String
Dim LiteracyAlignmentReportSlimFileName As String
Dim MultipartAlignmentReportSlimFileName As String
Dim MultipartMathPracticeAlignmentReportSlimFileName As String

Dim SlimCount As Long
Dim MathPracticeSlimCount As Long
Dim WritingPromptSlimCount As Long
Dim LiteracySlimCount As Long
Dim MultipartSlimCount As Long
Dim MultipartMathPracticeSlimCount As Long

Dim ReportDate As String
On Error GoTo ErrorExit
Set db = CurrentDb
Set rs = db.OpenRecordset("tblReportDecisions", dbOpenTable, dbForwardOnly)
Set rsCounts = db.OpenRecordset("tblReportsForDVDsCounts", dbOpenDynaset, dbForwardOnly)
'---Test if Recordset has a record.
If rs.EOF Then
 MsgBox "There were no records in your SystemTbl", vbOKOnly, "Error"
 GoTo ExitSub
End If
    
DoCmd.SetWarnings False
'---Set Report Filenames
    ReportDate = Format(Now(), "mm.dd.yyyy")
    AlignmentReportWithGUIDsFileName = "C:\AccessReports\With GUIDs\Alignment " & StateAbbreviation & " GUIDs.xlsx"
    AlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Without GUIDs\Alignment " & StateAbbreviation & ".xlsx"
    MathPracticeAlignmentReportWithGUIDsFileName = "C:\AccessReports\Math Practice Alignment Reports with GUIDs\Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
    MathPracticeAlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Math Practice Alignment Reports without GUIDs\Math Practice Alignment " & StateAbbreviation & ".xlsx"
    WritingPromptAlignmentReportWithGUIDsFileName = "C:\AccessReports\Writing Prompt Alignment Reports with GUIDs\Writing Prompt Alignment " & StateAbbreviation & " GUIDs.xlsx"
    WritingPromptAlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Writing Prompt Alignment Reports without GUIDs\Writing Prompt Alignment " & StateAbbreviation & ".xlsx"
    LiteracyAlignmentReportWithGUIDsFileName = "C:\AccessReports\Literacy Alignment Reports with GUIDs\Literacy Alignment " & StateAbbreviation & " GUIDs.xlsx"
    LiteracyAlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Literacy Alignment Reports without GUIDs\Literacy Alignment " & StateAbbreviation & ".xlsx"
    MultipartAlignmentReportWithGUIDsFileName = "C:\AccessReports\Multipart Alignment Reports with GUIDs\Multipart Alignment " & StateAbbreviation & " GUIDs.xlsx"
    MultipartAlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Multipart Alignment Reports without GUIDs\Multipart Alignment " & StateAbbreviation & ".xlsx"
    MultipartMathPracticeAlignmentReportWithGUIDsFileName = "C:\AccessReports\Multipart Math Practice Alignment Reports with GUIDs\Multipart Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
    MultipartMathPracticeAlignmentReportWithoutGUIDsFileName = "C:\AccessReports\Multipart Math Practice Alignment Reports without GUIDs\Multipart Math Practice Alignment " & StateAbbreviation & ".xlsx"

    AlignmentReportSlimFileName = "C:\AccessReports\Slim\Alignment " & StateAbbreviation & ".xlsx"
    MathPracticeAlignmentReportSlimFileName = "C:\AccessReports\Math Practice Alignment Reports Slim\Math Practice Alignment " & StateAbbreviation & ".xlsx"
    WritingPromptAlignmentReportSlimFileName = "C:\AccessReports\Writing Prompt Alignment Reports Slim\Writing Prompt Alignment " & StateAbbreviation & ".xlsx"
    LiteracyAlignmentReportSlimFileName = "C:\AccessReports\Literacy Alignment Reports Slim\Literacy Alignment " & StateAbbreviation & ".xlsx"
    MultipartAlignmentReportSlimFileName = "C:\AccessReports\Multipart Alignment Reports Slim\Multipart Alignment " & StateAbbreviation & ".xlsx"
    MultipartMathPracticeAlignmentReportSlimFileName = "C:\AccessReports\Multipart Math Practice Alignment Reports Slim\Multipart Math Practice Alignment " & StateAbbreviation & ".xlsx"

'Run Alignment Report queries
    DoCmd.OpenQuery "qryAlignmentReportWithGUIDs"
    DoCmd.OpenQuery "qryAlignmentReportWithoutGUIDs"
    DoCmd.OpenQuery "qryAlignmentReportSlim"
    If AlignmentReportStatus = True Then
        WithGUIDsCount = DCount("[Internal ID]", "tblAlignmentReportWithGUIDs")
        WithoutGUIDSCount = DCount("[Internal ID]", "tblAlignmentReportWithoutGUIDs")
        SlimCount = DCount("[Internal ID]", "tblAlignmentReportSlim")
'        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportWithGUIDs", AlignmentReportWithGUIDsFileName, True
'        Call ChangeWorksheetName(AlignmentReportWithGUIDsFileName, "tblAlignmentReportWithGUIDs")
'        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportWithoutGUIDs", AlignmentReportWithoutGUIDsFileName, True
'        Call ChangeWorksheetName(AlignmentReportWithoutGUIDsFileName, "tblAlignmentReportWithoutGUIDs")
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportSlim", AlignmentReportSlimFileName, True
        Call ChangeWorksheetName(AlignmentReportSlimFileName, "tblAlignmentReportSlim")
    End If
'Run and Export the writing prompt report queries if appropriate
    If WritingPromptStatus = True Then
        DoCmd.OpenQuery "qryWritingPromptAlignmentReportWithGUIDs"
        DoCmd.OpenQuery "qryWritingPromptAlignmentReportWithoutGUIDs"
        DoCmd.OpenQuery "qryWritingPromptAlignmentReportSlim"
        If AlignmentReportStatus = True Then
            WritingPromptWithGUIDsCount = DCount("[Internal ID]", "tblWritingPromptAlignmentReportWithGUIDs")
            WritingPromptWithoutGUIDsCount = DCount("[Internal ID]", "tblWritingPromptAlignmentReportWithoutGUIDs")
            WritingPromptSlimCount = DCount("[Internal ID]", "tblWritingPromptAlignmentReportSlim")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblWritingPromptAlignmentReportWithGUIDs", WritingPromptAlignmentReportWithGUIDsFileName, False
'            Call ChangeWorksheetName(WritingPromptAlignmentReportWithGUIDsFileName, "tblWritingPromptAlignmentReport")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblWritingPromptAlignmentReportWithoutGUIDs", WritingPromptAlignmentReportWithoutGUIDsFileName, False
'            Call ChangeWorksheetName(WritingPromptAlignmentReportWithoutGUIDsFileName, "tblWritingPromptAlignmentReport")
            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblWritingPromptAlignmentReportSlim", WritingPromptAlignmentReportSlimFileName, False
            Call ChangeWorksheetName(WritingPromptAlignmentReportSlimFileName, "tblWritingPromptAlignmentReport")
        End If
    End If
'Run and Export the Math Practice report queries if appropriate
    If MathPracticeStatus = True Then
        DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithGUIDs"
        DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithoutGUIDs"
        DoCmd.OpenQuery "qryMathPracticeAlignmentReportSlim"
        If AlignmentReportStatus = True Then
            MathPracticeWithGUIDsCount = DCount("[Internal ID]", "tblMathPracticeAlignmentReportWithGUIDs")
            MathPracticeWithoutGUIDsCount = DCount("[Internal ID]", "tblMathPracticeAlignmentReportWithoutGUIDs")
            MathPracticeSlimCount = DCount("[Internal ID]", "tblMathPracticeAlignmentReportSlim")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMathPracticeAlignmentReportWithGUIDs", MathPracticeAlignmentReportWithGUIDsFileName, True
'            Call ChangeWorksheetName(MathPracticeAlignmentReportWithGUIDsFileName, "tblMathPracticeAlignmentReportW")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMathPracticeAlignmentReportWithoutGUIDs", MathPracticeAlignmentReportWithoutGUIDsFileName, True
'            Call ChangeWorksheetName(MathPracticeAlignmentReportWithoutGUIDsFileName, "tblMathPracticeAlignmentReportW")
            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMathPracticeAlignmentReportSlim", MathPracticeAlignmentReportSlimFileName, True
            Call ChangeWorksheetName(MathPracticeAlignmentReportSlimFileName, "tblMathPracticeAlignmentReportS")
        End If
   End If
'Run and Export the Literacy report queries, if appropriate
    If ELA_LiteracyStatus = True Then
        DoCmd.OpenQuery "qryLiteracyAlignmentReportWithGUIDs"
        DoCmd.OpenQuery "qryLiteracyAlignmentReportWithoutGUIDs"
        DoCmd.OpenQuery "qryLiteracyAlignmentReportSlim"
        If AlignmentReportStatus = True Then
            LiteracyWithGUIDsCount = DCount("[Internal ID]", "tblLiteracyAlignmentReportWithGUIDs")
            LiteracyWithoutGUIDsCount = DCount("[Internal ID]", "tblLiteracyAlignmentReportWithoutGUIDs")
            LiteracySlimCount = DCount("[Internal ID]", "tblLiteracyAlignmentReportSlim")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblLiteracyAlignmentReportWithGUIDs", LiteracyAlignmentReportWithGUIDsFileName, True
'            Call ChangeWorksheetName(LiteracyAlignmentReportWithGUIDsFileName, "tblLiteracyAlignmentReportWithG")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblLiteracyAlignmentReportWithoutGUIDs", LiteracyAlignmentReportWithoutGUIDsFileName, True
'            Call ChangeWorksheetName(LiteracyAlignmentReportWithoutGUIDsFileName, "tblLiteracyAlignmentReportWitho")
            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblLiteracyAlignmentReportSlim", LiteracyAlignmentReportSlimFileName, True
            Call ChangeWorksheetName(LiteracyAlignmentReportSlimFileName, "tblLiteracyAlignmentReportSlim")
        End If
    End If
'Run and Export the Multipart report queries, if approriate
    If MultipartAlignmentStatus = True Then
        DoCmd.OpenQuery "qryMultipartAlignmentReportWithGUIDs"
        DoCmd.OpenQuery "qryMultipartAlignmentReportWithoutGUIDs"
        DoCmd.OpenQuery "qryMultipartAlignmentReportSlim"
        If AlignmentReportStatus = True Then
            MultipartWithGUIDsCount = DCount("[Internal ID]", "tblMultipartAlignmentReportWithGUIDs")
            MultipartWithoutGUIDsCount = DCount("[Internal ID]", "tblMultipartAlignmentReportWithoutGUIDs")
            MultipartSlimCount = DCount("[Internal ID]", "tblMultipartAlignmentReportSlim")
'            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithGUIDs", MultipartAlignmentReportWithGUIDsFileName, True
'            Call ChangeWorksheetName(MultipartAlignmentReportWithGUIDsFileName, "tblMultipartAlignmentReportWith")
 '           DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithoutGUIDs", MultipartAlignmentReportWithoutGUIDsFileName, True
 '           Call ChangeWorksheetName(MultipartAlignmentReportWithoutGUIDsFileName, "tblMultipartAlignmentReportWith")
            DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportSlim", MultipartAlignmentReportSlimFileName, True
            Call ChangeWorksheetName(MultipartAlignmentReportSlimFileName, "tblMultipartAlignmentReportSlim")
        End If
        If MathPracticeStatus = True Then
            DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithGUIDs"
            DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithoutGUIDs"
            DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportSlim"
            If AlignmentReportStatus = True Then
                MultipartMathPracticeWithGUIDsCount = DCount("[Internal ID]", "tblMultipartMathPracticeAlignmentReportWithGUIDs")
                MultipartMathPracticeWithoutGUIDsCount = DCount("[Internal ID]", "tblMultipartMathPracticeAlignmentReportWithoutGUIDs")
                MultipartMathPracticeSlimCount = DCount("[Internal ID]", "tblMultipartMathPracticeAlignmentReportSlim")
'                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartMathPracticeAlignmentReportWithGUIDs", MultipartMathPracticeAlignmentReportWithGUIDsFileName, True
'                Call ChangeWorksheetName(MultipartMathPracticeAlignmentReportWithGUIDsFileName, "tblMultipartMathPracticeAlignme")
'                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartMathPracticeAlignmentReportWithoutGUIDs", MultipartMathPracticeAlignmentReportWithoutGUIDsFileName, True
'                Call ChangeWorksheetName(MultipartMathPracticeAlignmentReportWithoutGUIDsFileName, "tblMultipartMathPracticeAlignme")
                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartMathPracticeAlignmentReportSlim", MultipartMathPracticeAlignmentReportSlimFileName, True
                Call ChangeWorksheetName(MultipartMathPracticeAlignmentReportSlimFileName, "tblMultipartMathPracticeAlignme")
            End If
        End If
    End If

'Export reports for distributors with partial AB licenses
Call DistributorAlignmentReports(StateAbbreviation, WritingPromptStatus, MathPracticeStatus, ELA_LiteracyStatus, MultipartAlignmentStatus, AlignmentReportWithGUIDsFileName, AlignmentReportWithoutGUIDsFileName, MathPracticeAlignmentReportWithGUIDsFileName, MathPracticeAlignmentReportWithoutGUIDsFileName, WritingPromptAlignmentReportWithGUIDsFileName, WritingPromptAlignmentReportWithoutGUIDsFileName, LiteracyAlignmentReportWithGUIDsFileName, LiteracyAlignmentReportWithoutGUIDsFileName, MultipartAlignmentReportWithGUIDsFileName, MultipartAlignmentReportWithoutGUIDsFileName, MultipartMathPracticeAlignmentReportWithGUIDsFileName, MultipartMathPracticeAlignmentReportWithoutGUIDsFileName)
'--Update tblReportsForDVDsCounts
        DoCmd.RunSQL "INSERT INTO tblReportsForDVDsCounts (StateNumber, WithGUIDsCount, WithoutGUIDSCount, SlimCount) VALUES (" & StateNumber & "," & WithGUIDsCount & "," & WithoutGUIDSCount & "," & SlimCount & ")"
    If AlignmentReportStatus = True Then
        If MathPracticeStatus = True Then
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MathPracticeWithGUIDsCount = " & MathPracticeWithGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MathPracticeWithoutGUIDsCount = " & MathPracticeWithoutGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MathPracticeSlimCount = " & MathPracticeSlimCount & " WHERE StateNumber = " & StateNumber & ";"
        End If
        If ELA_LiteracyStatus = True Then
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET LiteracyWithGUIDsCount = " & LiteracyWithGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET LiteracyWithoutGUIDsCount = " & LiteracyWithoutGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET LiteracySlimCount = " & LiteracySlimCount & " WHERE StateNumber = " & StateNumber & ";"
        End If
        If WritingPromptStatus = True Then
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET WritingPromptWithGUIDsCount = " & WritingPromptWithGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET WritingPromptWithoutGUIDsCount = " & WritingPromptWithoutGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET WritingPromptSlimCount = " & WritingPromptSlimCount & " WHERE StateNumber = " & StateNumber & ";"
        End If
        If MultipartAlignmentStatus = True Then
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartWithGUIDsCount = " & MultipartWithGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartWithoutGUIDsCount = " & MultipartWithoutGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
            DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartSlimCount = " & MultipartSlimCount & " WHERE StateNumber = " & StateNumber & ";"
            
            If MathPracticeStatus = True Then
                DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartMathPracticeWithGUIDsCount = " & MultipartMathPracticeWithGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
                DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartMathPracticeWithoutGUIDsCount = " & MultipartMathPracticeWithoutGUIDsCount & " WHERE StateNumber = " & StateNumber & ";"
                DoCmd.RunSQL "UPDATE tblReportsForDVDsCounts SET MultipartMathPracticeSlimCount = " & MultipartMathPracticeSlimCount & " WHERE StateNumber = " & StateNumber & ";"
            End If
        End If
    End If

'Run Edgate reports if requested
If EdGateStatus = True Then
    Call EdGateAlignmentReports(StateAbbreviation, WritingPromptStatus, MathPracticeStatus, ELA_LiteracyStatus, MultipartAlignmentStatus)
End If


ExitSub:
 rs.Close
 db.Close
 Set rs = Nothing
 Set db = Nothing
 Exit Sub
ErrorExit:
 MsgBox Err.Description
 Resume ExitSub
End Sub
Sub ChangeWorksheetName(FileName As String, WorksheetName As String)
Dim XlApp As New Excel.Application
Dim XlBook As Excel.Workbook
Dim Xlsheet As Excel.worksheet
Set XlBook = XlApp.Workbooks.Add(FileName)
XlBook.Application.DisplayAlerts = False
Set Xlsheet = XlBook.Worksheets(WorksheetName)
Xlsheet.Name = "Sheet1"
XlBook.SaveAs FileName, AccessMode:=xlExclusive, ConflictResolution:=Excel.XlSaveConflictResolution.xlLocalSessionChanges
XlBook.Close (True)
XlApp.Quit
Set XlApp = Nothing
End Sub
Sub DistributorAlignmentReports(StateAbbreviation As String, WritingPromptStatus As Boolean, MathPracticeStatus As Boolean, LiteracyStatus As Boolean, MultipartStatus As Boolean, AlignmentReportWithGUIDsFileName As String, AlignmentReportWithoutGUIDsFileName As String, MathPracticeAlignmentReportWithGUIDsFileName As String, MathPracticeAlignmentReportWithoutGUIDsFileName As String, WritingPromptAlignmentReportWithGUIDsFileName As String, WritingPromptAlignmentReportWithoutGUIDsFileName As String, LiteracyAlignmentReportWithGUIDsFileName As String, LiteracyAlignmentReportWithoutGUIDsFileName As String, MultipartAlignmentReportWithGUIDsFileName As String, MultipartAlignmentReportWithoutGUIDsFileName As String, MultipartMathPracticeAlignmentReportWithGUIDsFileName As String, MultipartMathPracticeAlignmentReportWithoutGUIDsFileName As String)

'------------------------------------------------------------
' This subroutine saves a set of alignment reports based on a distributor's license
'------------------------------------------------------------
Dim db As Database
Dim Distributor As String
Dim ELA As String
Dim SCI As String
Dim Math As String
Dim SOC As String
'ELA, SCI, etc. are string instead of Boolean because we need an NA value, in addition to yes and no
Dim Subject As String
Dim rsPartialLicense As Recordset
Dim rsNoLicense As Recordset
Dim rsLicenseCompany As Recordset
Dim DistributorAlignmentReportDirectory As String
Dim DistributorMathPracticeAlignmentReportDirectory As String
Dim DistributorWritingPromptAlignmentReportDirectory As String
Dim DistributorLiteracyAlignmentReportDirectory As String
Dim DistributorMultipartAlignmentReportDirectory As String
Dim DistributorMultipartMathPracticeAlignmentReportDirectory As String
Dim DistributorAlignmentReportFileName As String
Dim DistributorMathPracticeAlignmentReportFileName As String
Dim DistributorWritingPromptAlignmentReportFileName As String
Dim DistributorLiteracyAlignmentReportFileName As String
Dim DistributorMultipartAlignmentReportFileName As String
Dim DistributorMultipartMathPracticeAlignmentReportFileName As String
Dim fso As Object
Set fso = VBA.CreateObject("Scripting.FileSystemObject")
DoCmd.SetWarnings False
Set db = CurrentDb

'--- Run the query that produces the list of partial distributors for given state and the list of distributors without any license for the state
DoCmd.OpenQuery "qryReportingStateFAIB_AB_PartialDistributorLicense"
DoCmd.OpenQuery "qryReportingStateFAIB_AB_NoDistributorLicense"
DoCmd.OpenQuery "qryReportingStateFAIB_AB_PartialDistributorCompany"

Set rsNoLicense = db.OpenRecordset("tblReportingStateFAIB_AB_NoDistributorLicense", dbOpenSnapshot, dbForwardOnly)
Set rsLicenseCompany = db.OpenRecordset("tblReportingStateFAIB_AB_PartialDistributorCompany", dbOpenSnapshot, dbForwardOnly)

'Cycle through to create folders for all distributors with partial licenses


'First process states that have no licenses for the given states
While Not rsNoLicense.EOF
    Distributor = rsNoLicense![Account Name]
'Strip distributor name of '.' character
    Distributor = Replace(Distributor, ".", "")
'Produce reports for Distributors who do not have any licenses for standards authority
    DistributorAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Full Alignment Reports\"
    DistributorAlignmentReportFileName = DistributorAlignmentReportDirectory & "Alignment " & StateAbbreviation & ".xlsx"
    fso.CopyFile AlignmentReportWithoutGUIDsFileName, DistributorAlignmentReportFileName
    If MathPracticeStatus = True Then
        DistributorMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Math Practice Alignment Reports\"
        DistributorMathPracticeAlignmentReportFileName = DistributorMathPracticeAlignmentReportDirectory & "Math Practice Alignment " & StateAbbreviation & ".xlsx"
        fso.CopyFile MathPracticeAlignmentReportWithoutGUIDsFileName, DistributorMathPracticeAlignmentReportFileName
    End If
    If WritingPromptStatus = True Then
        DistributorWritingPromptAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Writing Prompt Alignment Reports\"
        DistributorWritingPromptAlignmentReportFileName = DistributorWritingPromptAlignmentReportDirectory & "Writing Prompt Alignment " & StateAbbreviation & ".xlsx"
        fso.CopyFile WritingPromptAlignmentReportWithoutGUIDsFileName, DistributorWritingPromptAlignmentReportFileName
    End If
    If LiteracyStatus = True Then
        DistributorLiteracyAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Literacy Alignment Reports\"
        DistributorLiteracyAlignmentReportFileName = DistributorLiteracyAlignmentReportDirectory & "Literacy Alignment " & StateAbbreviation & ".xlsx"
        fso.CopyFile LiteracyAlignmentReportWithoutGUIDsFileName, DistributorLiteracyAlignmentReportFileName
    End If
    If MultipartStatus = True Then
        DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
        DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & ".xlsx"
        fso.CopyFile MultipartAlignmentReportWithoutGUIDsFileName, DistributorMultipartAlignmentReportFileName
        If MathPracticeStatus = True Then
            DistributorMultipartMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Math Practice Alignment Reports\"
            DistributorMultipartMathPracticeAlignmentReportFileName = DistributorMultipartMathPracticeAlignmentReportDirectory & "Multipart Math Practice Alignment " & StateAbbreviation & ".xlsx"
            fso.CopyFile MultipartMathPracticeAlignmentReportWithoutGUIDsFileName, DistributorMultipartMathPracticeAlignmentReportFileName
        End If
    End If
    rsNoLicense.MoveNext
Wend
rsNoLicense.Close

'--- Search list of distributors with partial licenses for target state and cycle through from start to finish
While Not rsLicenseCompany.EOF
    Distributor = rsLicenseCompany![Account Name]
    'Set and pull the license for the given distributor
    DoCmd.RunSQL "Update tblReportingStateDistributor SET Distributor = '" & Distributor & "'  WHERE ID = 1"
    DoCmd.OpenQuery "qryReportingStateFAIB_AB_PartialDistributorCompanyLicense"
    Set rsPartialLicense = db.OpenRecordset("tblReportingStateFAIB_AB_PartialDistributorCompanyLicense", dbOpenSnapshot, dbForwardOnly)
    '-- Reset the subject values
    ELA = "No"
    Math = "No"
    SCI = "No"
    SOC = "No"
    If Len(StateAbbreviation) = 4 Then '--State is an NGSS or Custom NGSS
        ELA = "NA"
        Math = "NA"
        SOC = "NA"
        SCI = "Yes" '--Must be yes, otherwise that distributor wouldn't show up in license
    Else
        If StateAbbreviation = "CC" Then
            SCI = "NA"
            SOC = "NA"
        End If
        End If
    While Not rsPartialLicense.EOF
        Subject = rsPartialLicense![Subject Code]
        If Subject = "LANG" Then
            ELA = "Yes"
        ElseIf Subject = "Math" Then
            Math = "Yes"
        ElseIf Subject = "SCI" Then
            SCI = "Yes"
        ElseIf Subject = "SOC" Then
            SOC = "Yes"
        End If
        rsPartialLicense.MoveNext
    Wend
    rsPartialLicense.Close
    
    'Strip distributor name of '.' character
    Distributor = Replace(Distributor, ".", "")
        
    If Len(StateAbbreviation) < 4 Then ' not sure why I need to check for state length. This seems like it would be true for NGSS states too#################
        If (ELA = "Yes" Or ELA = "NA") And (Math = "Yes" Or Math = "NA") And (SCI = "Yes" Or SCI = "NA") And (SOC = "Yes" Or SOC = "NA") Then
        'Distributor has complete license for standards authority, export files with GUIDs
            DistributorAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Full Alignment Reports\"
            DistributorAlignmentReportFileName = DistributorAlignmentReportDirectory & "Alignment " & StateAbbreviation & " GUIDs.xlsx"
            Call CheckDirectory(DistributorAlignmentReportDirectory)
            fso.CopyFile AlignmentReportWithGUIDsFileName, DistributorAlignmentReportFileName
            If MathPracticeStatus = True Then
                DistributorMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Math Practice Alignment Reports\"
                DistributorMathPracticeAlignmentReportFileName = DistributorMathPracticeAlignmentReportDirectory & "Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
                fso.CopyFile MathPracticeAlignmentReportWithGUIDsFileName, DistributorMathPracticeAlignmentReportFileName
            End If
            If WritingPromptStatus = True Then
                DistributorWritingPromptAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Writing Prompt Alignment Reports\"
                DistributorWritingPromptAlignmentReportFileName = DistributorWritingPromptAlignmentReportDirectory & "Writing Prompt Alignment " & StateAbbreviation & " GUIDs.xlsx"
                fso.CopyFile WritingPromptAlignmentReportWithGUIDsFileName, DistributorWritingPromptAlignmentReportFileName
            End If
            If LiteracyStatus = True Then
                DistributorLiteracyAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Literacy Alignment Reports\"
                DistributorLiteracyAlignmentReportFileName = DistributorLiteracyAlignmentReportDirectory & "Literacy Alignment " & StateAbbreviation & " GUIDs.xlsx"
                fso.CopyFile LiteracyAlignmentReportWithGUIDsFileName, DistributorLiteracyAlignmentReportFileName
            End If
            If MultipartStatus = True Then
                DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
                DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & " GUIDs.xlsx"
                fso.CopyFile MultipartAlignmentReportWithGUIDsFileName, DistributorMultipartAlignmentReportFileName
                If MathPracticeStatus = True Then
                    DistributorMultipartMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Math Practice Alignment Reports\"
                    DistributorMultipartMathPracticeAlignmentReportFileName = DistributorMultipartMathPracticeAlignmentReportDirectory & "Multipart Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
                    fso.CopyFile MultipartMathPracticeAlignmentReportWithGUIDsFileName, DistributorMultipartMathPracticeAlignmentReportFileName
                End If
            End If
            
            Else:
        'Then Distributor has some, but not all, subjects for standards authority
            DoCmd.OpenQuery "qryClearAlignmentReportWithPartialGUIDs"
                If (ELA = "Yes") Then
                    DoCmd.OpenQuery "qryAlignmentReportWithGUIDsELA"
                    If WritingPromptStatus = True Then
                        DistributorWritingPromptAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Writing Prompt Alignment Reports\"
                        DistributorWritingPromptAlignmentReportFileName = DistributorWritingPromptAlignmentReportDirectory & "Writing Prompt Alignment " & StateAbbreviation & " GUIDs.xlsx"
                        fso.CopyFile WritingPromptAlignmentReportWithGUIDsFileName, DistributorWritingPromptAlignmentReportFileName
                    End If
                    If LiteracyStatus = True Then
                        DistributorLiteracyAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Literacy Alignment Reports\"
                        DistributorLiteracyAlignmentReportFileName = DistributorLiteracyAlignmentReportDirectory & "Literacy Alignment " & StateAbbreviation & " GUIDs.xlsx"
                        fso.CopyFile LiteracyAlignmentReportWithGUIDsFileName, DistributorLiteracyAlignmentReportFileName
                    End If
                    If MultipartStatus = True Then
                        If (Math = "Yes") Then
                            DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
                            DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & " GUIDs.xlsx"
                            fso.CopyFile MultipartAlignmentReportWithGUIDsFileName, DistributorMultipartAlignmentReportFileName
                        Else
                            DoCmd.OpenQuery "qryClearMultipartAlignmentReportWithPartialGUIDs"
                            DoCmd.OpenQuery "qryMultipartAlignmentReportPartialWithGUIDsELA"
                        End If
                    End If
                ElseIf (ELA = "No") Then
                    DoCmd.OpenQuery "qryAlignmentReportWithoutGUIDsELA"
                    If WritingPromptStatus = True Then
                        DistributorWritingPromptAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Writing Prompt Alignment Reports\"
                        DistributorWritingPromptAlignmentReportFileName = DistributorWritingPromptAlignmentReportDirectory & "Writing Prompt Alignment " & StateAbbreviation & ".xlsx"
                        fso.CopyFile WritingPromptAlignmentReportWithoutGUIDsFileName, DistributorWritingPromptAlignmentReportFileName
                        End If
                    If LiteracyStatus = True Then
                        DistributorLiteracyAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Literacy Alignment Reports\"
                        DistributorLiteracyAlignmentReportFileName = DistributorLiteracyAlignmentReportDirectory & "Literacy Alignment " & StateAbbreviation & ".xlsx"
                        fso.CopyFile LiteracyAlignmentReportWithoutGUIDsFileName, DistributorLiteracyAlignmentReportFileName
                    End If
                    If MultipartStatus = True Then
                        If (Math = "No") Then
                            DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
                            DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & ".xlsx"
                            fso.CopyFile MultipartAlignmentReportWithoutGUIDsFileName, DistributorMultipartAlignmentReportFileName
                        Else
                        DoCmd.OpenQuery "qryClearMultipartAlignmentReportWithPartialGUIDs"
                        DoCmd.OpenQuery "qryMultipartAlignmentReportPartialWithoutGUIDsELA"
                        End If
                    End If
                Else:
                End If
                If (Math = "Yes") Then
                        DoCmd.OpenQuery "qryAlignmentReportWithGUIDsMath"
                        If MathPracticeStatus = True Then
                            DistributorMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Math Practice Alignment Reports\"
                            DistributorMathPracticeAlignmentReportFileName = DistributorMathPracticeAlignmentReportDirectory & "Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
                            fso.CopyFile MathPracticeAlignmentReportWithGUIDsFileName, DistributorMathPracticeAlignmentReportFileName
                        End If
                        If MultipartStatus = True Then
                            If (ELA = "No") Then
                                DoCmd.OpenQuery "qryMultipartAlignmentReportPartialWithGUIDsMath"
                                DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
                                DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & " GUIDs.xlsx"
                                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithPartialGUIDs"
                                Call ChangeWorksheetName(DistributorMultipartAlignmentReportFileName, "tblMultipartAlignmentReportWith")
                            End If
                            If MathPracticeStatus = True Then
                                DistributorMultipartMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Math Practice Alignment Reports\"
                                DistributorMultipartMathPracticeAlignmentReportFileName = DistributorMultipartMathPracticeAlignmentReportDirectory & "Multipart Math Practice Alignment " & StateAbbreviation & " GUIDs.xlsx"
                                fso.CopyFile MultipartMathPracticeAlignmentReportWithGUIDsFileName, DistributorMultipartMathPracticeAlignmentReportFileName
                            End If
                        End If
                ElseIf (Math = "No") Then
                        DoCmd.OpenQuery "qryAlignmentReportwithoutGUIDsMath"
                        If MathPracticeStatus = True Then
                            DistributorMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Math Practice Alignment Reports\"
                            DistributorMathPracticeAlignmentReportFileName = DistributorMathPracticeAlignmentReportDirectory & "Math Practice Alignment " & StateAbbreviation & " .xlsx"
                            fso.CopyFile MathPracticeAlignmentReportWithoutGUIDsFileName, DistributorMathPracticeAlignmentReportFileName
                        End If
                        If MultipartStatus = True Then 'this is where it dies
                            If (ELA = "Yes") Then
                                DoCmd.OpenQuery "qryMultipartAlignmentReportPartialWithoutGUIDsMath"
                                DistributorMultipartAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
                                DistributorMultipartAlignmentReportFileName = DistributorMultipartAlignmentReportDirectory & "Multipart Alignment " & StateAbbreviation & " .xlsx"
                                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithPartialGUIDs", DistributorMultipartAlignmentReportFileName, True
                                Call ChangeWorksheetName(DistributorMultipartAlignmentReportFileName, "tblMultipartAlignmentReportWith")
                            End If
                            If MathPracticeStatus = True Then
                                DistributorMultipartMathPracticeAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Math Practice Alignment Reports\"
                                DistributorMultipartMathPracticeAlignmentReportFileName = DistributorMultipartMathPracticeAlignmentReportDirectory & "Multipart Math Practice Alignment " & StateAbbreviation & ".xlsx"
                                fso.CopyFile MultipartMathPracticeAlignmentReportWithoutGUIDsFileName, DistributorMultipartMathPracticeAlignmentReportFileName
                            End If
                        End If
                End If
                If (SCI = "Yes") Then
                            DoCmd.OpenQuery "qryAlignmentReportWithGUIDsSCI"
                    ElseIf (SCI = "No") Then
                            DoCmd.OpenQuery "qryAlignmentReportWithoutGUIDsSCI"
                Else:
                End If
                If (SOC = "Yes") Then
                            DoCmd.OpenQuery "qryAlignmentReportWithGUIDsSOC"
                    ElseIf (SOC = "No") Then
                            DoCmd.OpenQuery "qryAlignmentReportWithoutGUIDsSOC"
                Else:
                End If
                
               'Export the partial distributor report
                DistributorAlignmentReportDirectory = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Full Alignment Reports\"
                DistributorAlignmentReportFileName = DistributorAlignmentReportDirectory & "Alignment " & StateAbbreviation & " GUIDs.xlsx"
                DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportWithPartialGUIDs", DistributorAlignmentReportFileName, True
                Call ChangeWorksheetName(DistributorAlignmentReportFileName, "tblAlignmentReportWithPartialGU")
            End If
        End If
        'Move to next distributor in LicenseCompany
    rsLicenseCompany.MoveNext
Wend
 rsLicenseCompany.Close
End Sub

Sub EdGateAlignmentReports(StateAbbreviation As String, WritingPromptStatus As Boolean, MathPracticeStatus As Boolean, LiteracyStatus As Boolean, MultipartStatus As Boolean)
    Dim AlignmentwithUUIDsReportFileName As String
    Dim AlignmentwithMissingUUIDsReportFileName As String
    Dim MathPracticeAlignmentwithUUIDsReportFileName As String
    Dim MathPracticeAlignmentwithMissingUUIDsReportFileName As String
    Dim WritingPromptAlignmentwithUUIDsReportFileName As String
    Dim WritingPromptAlignmentwithMissingUUIDsReportFileName As String
    Dim LiteracyAlignmentwithUUIDsReportFileName As String
    Dim LiteracyAlignmentwithMissingUUIDsReportFileName As String
    Dim MultipartAlignmentwithUUIDsReportFileName As String
    Dim MultipartAlignmentwithMissingUUIDsReportFileName As String
    Dim MultipartMathPracticeAlignmentwithUUIDsReportFileName As String

        
    AlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Alignment Reports with UUIDs\" & StateAbbreviation & " Alignment File UUID.xlsx"
    AlignmentwithMissingUUIDsReportFileName = "C:\AccessReports\EDgate\Alignment Reports with Missing UUIDs\" & StateAbbreviation & " Alignment File Missing UUIDs WITH GUIDS.xlsx"
    DoCmd.OpenQuery "qryAlignmentReportWithUUIDs"
    DoCmd.OpenQuery "qryAlignmentReportWithoutMatchingUUIDs"
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportWithUUIDs", AlignmentwithUUIDsReportFileName, True
    Call ChangeWorksheetName(AlignmentwithUUIDsReportFileName, "tblAlignmentReportWithUUIDs")
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblAlignmentReportWithMissingUUIDs", AlignmentwithMissingUUIDsReportFileName, True
    Call ChangeWorksheetName(AlignmentwithMissingUUIDsReportFileName, "tblAlignmentReportWithMissingUU")

If WritingPromptStatus = True Then
    WritingPromptAlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Writing Prompt Alignment Reports with UUIDs\" & StateAbbreviation & " Writing Prompt Alignment File UUID.xlsx"
    WritingPromptAlignmentwithMissingUUIDsReportFileName = "C:\AccessReports\EDgate\Writing Prompt Alignment Reports with Missing UUIDs\" & StateAbbreviation & " Writing Prompt Alignment File Missing UUIDs WITH GUIDS.xlsx"
    DoCmd.OpenQuery "qryWritingPromptAlignmentReportWithUUIDs"
    DoCmd.OpenQuery "qryWritingPromptAlignmentReportMissingUUIDs"
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblWritingPromptAlignmentReportWithUUIDs", WritingPromptAlignmentwithUUIDsReportFileName, True
    Call ChangeWorksheetName(WritingPromptAlignmentwithUUIDsReportFileName, "tblWritingPromptAlignmentReport")
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblWritingPromptAlignmentReportMissingUUIDs", WritingPromptAlignmentwithMissingUUIDsReportFileName, True
    Call ChangeWorksheetName(WritingPromptAlignmentwithMissingUUIDsReportFileName, "tblWritingPromptAlignmentReport")
End If

If MathPracticeStatus = True Then
    MathPracticeAlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Math Practice Alignment Reports with UUIDs\" & StateAbbreviation & " Math Practice Alignment File UUID.xlsx"
    MathPracticeAlignmentwithMissingUUIDsReportFileName = "C:\AccessReports\EDgate\Math Practice Alignment Reports with Missing UUIDs\" & StateAbbreviation & " Math Practice Alignment File Missing UUIDs WITH GUIDS.xlsx"
    DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithUUIDs1"
    DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithUUIDs2"
    DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithUUIDs3"
    DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithUUIDs4"
    DoCmd.OpenQuery "qryMathPracticeAlignmentReportWithMissingUUIDs"
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMathPracticeAlignmentReportWithUUIDs2", MathPracticeAlignmentwithUUIDsReportFileName, True
    Call ChangeWorksheetName(MathPracticeAlignmentwithUUIDsReportFileName, "tblMathPracticeAlignmentReportW")
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMathPracticeAlignmentReportWithMissingUUIDs", MathPracticeAlignmentwithMissingUUIDsReportFileName, True
    Call ChangeWorksheetName(MathPracticeAlignmentwithMissingUUIDsReportFileName, "tblMathPracticeAlignmentReportW")
End If

If LiteracyStatus = True Then
    LiteracyAlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Literacy Alignment Reports with UUIDs\" & StateAbbreviation & " Literacy Alignment File UUID.xlsx"
    LiteracyAlignmentwithMissingUUIDsReportFileName = "C:\AccessReports\EDgate\Literacy Alignment Reports with Missing UUIDs\" & StateAbbreviation & " Literacy Alignment File Missing UUIDs WITH GUIDS.xlsx"
    DoCmd.OpenQuery "qryLiteracyAlignmentReportWithUUIDs"
    DoCmd.OpenQuery "qryLiteracyAlignmentReportWithMissingUUIDs"
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblLiteracyAlignmentReportWithUUIDs", LiteracyAlignmentwithUUIDsReportFileName, True
    Call ChangeWorksheetName(LiteracyAlignmentwithUUIDsReportFileName, "tblLiteracyAlignmentReportWithU")
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblLiteracyAlignmentReportWithMissingUUIDs", LiteracyAlignmentwithMissingUUIDsReportFileName, True
    Call ChangeWorksheetName(LiteracyAlignmentwithMissingUUIDsReportFileName, "tblLiteracyAlignmentReportWithM")
End If

If MultipartStatus = True Then
    MultipartAlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Multipart Alignment Reports with UUIDs\" & StateAbbreviation & " Multipart Alignment File UUID.xlsx"
    MultipartAlignmentwithMissingUUIDsReportFileName = "C:\AccessReports\EDgate\Multipart Alignment Reports with Missing UUIDs\" & StateAbbreviation & " Multipart Alignment File Missing UUIDs WITH GUIDS.xlsx"
    DoCmd.OpenQuery "qryMultipartAlignmentReportWithUUIDs"
    DoCmd.OpenQuery "qryMultipartAlignmentReportWithMissingUUIDs"
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithUUIDs", MultipartAlignmentwithUUIDsReportFileName, True
    Call ChangeWorksheetName(MultipartAlignmentwithUUIDsReportFileName, "tblMultipartAlignmentReportWith")
    DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartAlignmentReportWithMissingUUIDs", MultipartAlignmentwithMissingUUIDsReportFileName, True
    Call ChangeWorksheetName(MultipartAlignmentwithMissingUUIDsReportFileName, "tblMultipartAlignmentReportWith")
    If MathPracticeStatus = True Then
        MultipartMathPracticeAlignmentwithUUIDsReportFileName = "C:\AccessReports\EDgate\Multipart Math Practice Alignment Reports with UUIDs\" & StateAbbreviation & " Multipart Math Practice Alignment File UUID.xlsx"
        'Note: MultipartMathPracticeWithoutUUIDs not needed because, since math practice consists of 8 standards, they would have all been covered by MathPracticeWithoutUUIDs
        DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithUUIDs1"
        DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithUUIDs2"
        DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithUUIDs3"
        DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithUUIDs4"
        'DoCmd.OpenQuery "qryMultipartMathPracticeAlignmentReportWithMissingUUIDs"
        DoCmd.TransferSpreadsheet acExport, acSpreadsheetTypeExcel12Xml, "tblMultipartMathPracticeAlignmentReportWithUUIDs2", MultipartMathPracticeAlignmentwithUUIDsReportFileName, True
        Call ChangeWorksheetName(MultipartMathPracticeAlignmentwithUUIDsReportFileName, "tblMultipartMathPracticeAlignme")
    End If
End If



End Sub

Sub CreateReportFolders()
'------------------------------------------------------------
' This subroutine creates folders where all alignment and Partial Distributor Licenese reports are verified or saved
'------------------------------------------------------------
Dim db As Database
Dim Distributor As String
Dim rsLicenseCompany As Recordset
Dim DirectoryName As String

Set db = CurrentDb

DirectoryName = "C:\AccessReports\Literacy Alignment Reports Slim\"
Call CheckDirectory(DirectoryName)

DirectoryName = "C:\AccessReports\Literacy Alignment Reports with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Literacy Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Literacy Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Math Practice Alignment Reports Slim\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Math Practice Alignment Reports with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Math Practice Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Alignment Reports Slim\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Alignment Reports with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Math Practice Alignment Reports Slim\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Math Practice Alignment Reports with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Multipart Math Practice Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Slim\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\without GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Writing Prompt Alignment Reports Slim\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Writing Prompt Alignment Reports with GUIDs\"
Call CheckDirectory(DirectoryName)
DirectoryName = "C:\AccessReports\Writing Prompt Alignment Reports without GUIDs\"
Call CheckDirectory(DirectoryName)

DoCmd.OpenQuery "qryFAIB_AllPartialDistributorLicenses"
Set rsLicenseCompany = db.OpenRecordset("tblFAIB_AllPartialDistributorLicenses", dbOpenSnapshot, dbForwardOnly)
'Cycle through to create folders for all distributors with partial licenses
While Not rsLicenseCompany.EOF
    Distributor = rsLicenseCompany![Account Name]
    Distributor = Replace(Distributor, ".", "")
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\"
    Call CheckDirectory(DirectoryName)
    'Create subfolders'
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Full Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Math Practice Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Writing Prompt Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Literacy Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    DirectoryName = "C:\AccessReports\Distributor Partial License Alignment Reports\" & Distributor & "\Multipart Math Practice Alignment Reports\"
    Call CheckDirectory(DirectoryName)
    rsLicenseCompany.MoveNext
Wend
 rsLicenseCompany.Close
End Sub
