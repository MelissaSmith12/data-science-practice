Option Compare Database
Option Explicit
'Formats push lists from SCIP load format to FAIB Load format
Sub FormatPushLists()
'
' This macro opens all files within a folder of push lists FAIB MS Access Coverage report database
Dim strFile As String
Dim strPath As String
Dim strPathFile As String
DoCmd.SetWarnings False

'Loop through the files in the directory to open and format them. User must manually create a subfolder entitled "Access"
strPath = "C:\Users\msmith\Documents\2016 Reports\Fall\Pre-Inference Engine\Push Lists\10.6.2016\"

strFile = Dir(strPath & "*.xlsx")
Do While Len(strFile) > 0
      strPathFile = strPath & strFile
      Call FormatPushList(strPath, strFile, strPathFile)
      strFile = Dir() 'Moves strFile to next file in directory
Loop
DoCmd.SetWarnings True
End Sub

Sub FormatPushList(strPath As String, strFile As String, strPathFile As String)
Dim StateAbbrev As String
Dim strPathSubFolder As String
Dim strPathSubFolderFile As String
Dim XlApp As New Excel.Application
Dim XlBook As Excel.Workbook
Dim XlSheet As Excel.Worksheet
Dim Lastrow As Long
Dim db As Database
Dim StateNumber As Integer
Dim rsStateList As Recordset
Dim rsPushListCount As Recordset
Set db = CurrentDb

'Define the variables needed to open and work with spreadsheets
Set XlBook = Workbooks.Open(strPathFile)
Set XlSheet = XlBook.Sheets(ActiveSheet.Name)
XlBook.Application.DisplayAlerts = False



'Get the state abbreviation from the filename. Change to state number
StateAbbrev = Range("A2").Value

'Use the stateabbreviation to get the state number
Set rsStateList = db.OpenRecordset("tblStandardsDocumentsWithSequence", dbOpenSnapshot)
While rsStateList.EOF = False
    'check for match
    If rsStateList.Fields.Item(1).Value = StateAbbrev Then
        'get value
        StateNumber = rsStateList!StateNumber
        'exit loop
        rsStateList.MoveLast
    End If
    rsStateList.MoveNext
Wend
rsStateList.Close

'Set the Path for strPathSubFolder. Set the StrPathSubFolderFilename
strPathSubFolder = strPath & "Access\"
strPathSubFolderFile = strPathSubFolder & StateAbbrev & " Access.xlsx"

'Do stuff here: Paste state number, Replace push as crosswalk, save number of rows to table
Lastrow = ActiveSheet.UsedRange.Rows.Count

'Save the number of rows to a table for confirmation
Set rsPushListCount = db.OpenRecordset("tblPushListFileCount", dbOpenSnapshot)
DoCmd.RunSQL "UPDATE tblPushListFileCount SET RowCount = " & Lastrow & " WHERE StateNumber = " & StateNumber & ";"
rsPushListCount.Close

'Paste the state number
    Range("A1").Select
    ActiveCell.FormulaR1C1 = "State"
    Range("A2").Select
    ActiveCell.FormulaR1C1 = StateNumber
    Range("A2").Select
    Selection.Copy
    Range("A2:A" & Lastrow).Select
    ActiveSheet.Paste

'Create the formula to convert the push list type and paste it
    Range("E1").Select
    ActiveCell.FormulaR1C1 = "Alignment Type"
    Range("E2").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC[-2]=""00000000-0000-0000-0000-000000000000"",3,IF(RC[-1]=""Push as Crosswalked"",5,IF(RC[-1]=""Push as Tagged"",4,2)))"
    Range("E2").Select
    Selection.Copy
    Range("E2:E" & Lastrow).Select
    ActiveSheet.Paste
    Selection.End(xlUp).Select
    Range(Selection, Selection.End(xlDown)).Select
'    Application.CutCopyMode = False
    Selection.Copy
    
'Select the numer push list type and paste as values
    Range("E2:E" & Lastrow).Select
    Selection.Copy
    Range("E2:E" & Lastrow).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("E1").Select
'    Application.CutCopyMode = False
    
'Delete the original push list column
    Range("D1").Select
    Selection.EntireColumn.Delete
    

'Save as a new file
    ActiveWorkbook.SaveAs strPathSubFolderFile, FileFormat:=51


'Close the old file
XlBook.Close SaveChanges:=False

End Sub
Sub CCAlignmentReportProcessing(StateNumber As Integer, strPathSubFolderFile As String)
Dim Lastrow As Long

    Range("E2").Select
    'Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = StateNumber
    Range("E2").Select
    Selection.Copy
    Range("C2").Select
    Selection.End(xlDown).Select
    Range("D" & Lastrow).Select
    Range(Selection, Selection.End(xlUp)).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Selection.End(xlUp).Select
    Selection.End(xlUp).Select
    'Application.CutCopyMode = False
    Selection.ClearContents
    Range("E2").Select
    Selection.ClearContents
    Range("D1").Select
    ActiveCell.FormulaR1C1 = "State"
    Range("E2").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-3]="""", 0, IF(RC[-3]=""00000000-0000-0000-0000-000000000000"", 3, IF(RC[-2]=""Infer"", 1, IF(RC[-2]=""Tagged"", 4, IF(RC[-2]=""Crosswalked"", 5,2)))))"
    Range("E2").Select
    Selection.Copy
    Range("D2").Select
    Selection.End(xlDown).Select
    Range("E" & Lastrow).Select
    Range(Selection, Selection.End(xlUp)).Select
    ActiveSheet.Paste
    'Application.CutCopyMode = False
    Selection.Copy
    Range("C" & Lastrow).Select
    Range(Selection, Selection.End(xlUp)).Select
    Range("C2:C" & Lastrow).Select
    Range("C" & Lastrow).Activate
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("E" & Lastrow).Select
    'Application.CutCopyMode = False
    Selection.ClearContents
    Range(Selection, Selection.End(xlUp)).Select
    Range(Selection, Selection.End(xlUp)).Select
    Range("E2:E" & Lastrow).Select
    Range("E" & Lastrow).Activate
    Selection.ClearContents
    Selection.End(xlUp).Select
    Selection.End(xlToLeft).Select
    Selection.End(xlToLeft).Select
    Selection.End(xlToLeft).Select
    ActiveWorkbook.SaveAs strPathSubFolderFile, FileFormat:=51
    ActiveWorkbook.Close
End Sub
